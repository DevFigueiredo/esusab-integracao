/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.cds.transport.generated.thrift.atividadecoletiva;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2020-11-06")
public class FichaAtividadeColetivaThrift implements org.apache.thrift.TBase<FichaAtividadeColetivaThrift, FichaAtividadeColetivaThrift._Fields>, java.io.Serializable, Cloneable, Comparable<FichaAtividadeColetivaThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FichaAtividadeColetivaThrift");

  private static final org.apache.thrift.protocol.TField UUID_FICHA_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidFicha", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField DT_ATIVIDADE_COLETIVA_V200_FIELD_DESC = new org.apache.thrift.protocol.TField("dtAtividadeColetivaV200", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField NUM_PARTICIPANTES_PROGRAMADOS_V200_FIELD_DESC = new org.apache.thrift.protocol.TField("numParticipantesProgramadosV200", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField OUTRA_LOCALIDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("outraLocalidade", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField HORA_INICIO_V200_FIELD_DESC = new org.apache.thrift.protocol.TField("horaInicioV200", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField HORA_FIM_V200_FIELD_DESC = new org.apache.thrift.protocol.TField("horaFimV200", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField INEP_FIELD_DESC = new org.apache.thrift.protocol.TField("inep", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField RESPONSAVEL_CNS_V200_FIELD_DESC = new org.apache.thrift.protocol.TField("responsavelCnsV200", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField RESPONSAVEL_CNES_UNIDADE_V200_FIELD_DESC = new org.apache.thrift.protocol.TField("responsavelCnesUnidadeV200", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField RESPONSAVEL_NUM_INE_V200_FIELD_DESC = new org.apache.thrift.protocol.TField("responsavelNumIneV200", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField NUM_PARTICIPANTES_FIELD_DESC = new org.apache.thrift.protocol.TField("numParticipantes", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField NUM_AVALIACOES_ALTERADAS_FIELD_DESC = new org.apache.thrift.protocol.TField("numAvaliacoesAlteradas", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField PROFISSIONAIS_FIELD_DESC = new org.apache.thrift.protocol.TField("profissionais", org.apache.thrift.protocol.TType.LIST, (short)13);
  private static final org.apache.thrift.protocol.TField ATIVIDADE_TIPO_FIELD_DESC = new org.apache.thrift.protocol.TField("atividadeTipo", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField TEMAS_PARA_REUNIAO_FIELD_DESC = new org.apache.thrift.protocol.TField("temasParaReuniao", org.apache.thrift.protocol.TType.LIST, (short)15);
  private static final org.apache.thrift.protocol.TField PUBLICO_ALVO_FIELD_DESC = new org.apache.thrift.protocol.TField("publicoAlvo", org.apache.thrift.protocol.TType.LIST, (short)16);
  private static final org.apache.thrift.protocol.TField PRATICAS_TEMAS_PARA_SAUDE_V200_FIELD_DESC = new org.apache.thrift.protocol.TField("praticasTemasParaSaudeV200", org.apache.thrift.protocol.TType.LIST, (short)17);
  private static final org.apache.thrift.protocol.TField PARTICIPANTES_FIELD_DESC = new org.apache.thrift.protocol.TField("participantes", org.apache.thrift.protocol.TType.LIST, (short)18);
  private static final org.apache.thrift.protocol.TField TB_CDS_ORIGEM_FIELD_DESC = new org.apache.thrift.protocol.TField("tbCdsOrigem", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField CODIGO_IBGE_MUNICIPIO_V200_FIELD_DESC = new org.apache.thrift.protocol.TField("codigoIbgeMunicipioV200", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField CNES_LOCAL_ATIVIDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("cnesLocalAtividade", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField PROCEDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("procedimento", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField TURNO_FIELD_DESC = new org.apache.thrift.protocol.TField("turno", org.apache.thrift.protocol.TType.I64, (short)23);
  private static final org.apache.thrift.protocol.TField HEADER_TRANSPORT_FIELD_DESC = new org.apache.thrift.protocol.TField("headerTransport", org.apache.thrift.protocol.TType.STRUCT, (short)24);
  private static final org.apache.thrift.protocol.TField TEMAS_PARA_SAUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("temasParaSaude", org.apache.thrift.protocol.TType.LIST, (short)25);
  private static final org.apache.thrift.protocol.TField PRATICAS_EM_SAUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("praticasEmSaude", org.apache.thrift.protocol.TType.LIST, (short)26);
  private static final org.apache.thrift.protocol.TField PSE_EDUCACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("pseEducacao", org.apache.thrift.protocol.TType.BOOL, (short)27);
  private static final org.apache.thrift.protocol.TField PSE_SAUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("pseSaude", org.apache.thrift.protocol.TType.BOOL, (short)28);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FichaAtividadeColetivaThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FichaAtividadeColetivaThriftTupleSchemeFactory());
  }

  private String uuidFicha; // required
  private long dtAtividadeColetivaV200; // optional
  private int numParticipantesProgramadosV200; // optional
  private String outraLocalidade; // optional
  private long horaInicioV200; // optional
  private long horaFimV200; // optional
  private long inep; // optional
  private String responsavelCnsV200; // optional
  private String responsavelCnesUnidadeV200; // optional
  private String responsavelNumIneV200; // optional
  private int numParticipantes; // optional
  private int numAvaliacoesAlteradas; // optional
  private List<ProfissionalCboRowItemThrift> profissionais; // optional
  private long atividadeTipo; // optional
  private List<Long> temasParaReuniao; // optional
  private List<Long> publicoAlvo; // optional
  private List<Long> praticasTemasParaSaudeV200; // optional
  private List<ParticipanteRowItemThrift> participantes; // optional
  private int tbCdsOrigem; // optional
  private String codigoIbgeMunicipioV200; // optional
  private String cnesLocalAtividade; // optional
  private String procedimento; // optional
  private long turno; // optional
  private br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift headerTransport; // optional
  private List<Long> temasParaSaude; // optional
  private List<Long> praticasEmSaude; // optional
  private boolean pseEducacao; // optional
  private boolean pseSaude; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    UUID_FICHA((short)1, "uuidFicha"),
    DT_ATIVIDADE_COLETIVA_V200((short)2, "dtAtividadeColetivaV200"),
    NUM_PARTICIPANTES_PROGRAMADOS_V200((short)3, "numParticipantesProgramadosV200"),
    OUTRA_LOCALIDADE((short)4, "outraLocalidade"),
    HORA_INICIO_V200((short)5, "horaInicioV200"),
    HORA_FIM_V200((short)6, "horaFimV200"),
    INEP((short)7, "inep"),
    RESPONSAVEL_CNS_V200((short)8, "responsavelCnsV200"),
    RESPONSAVEL_CNES_UNIDADE_V200((short)9, "responsavelCnesUnidadeV200"),
    RESPONSAVEL_NUM_INE_V200((short)10, "responsavelNumIneV200"),
    NUM_PARTICIPANTES((short)11, "numParticipantes"),
    NUM_AVALIACOES_ALTERADAS((short)12, "numAvaliacoesAlteradas"),
    PROFISSIONAIS((short)13, "profissionais"),
    ATIVIDADE_TIPO((short)14, "atividadeTipo"),
    TEMAS_PARA_REUNIAO((short)15, "temasParaReuniao"),
    PUBLICO_ALVO((short)16, "publicoAlvo"),
    PRATICAS_TEMAS_PARA_SAUDE_V200((short)17, "praticasTemasParaSaudeV200"),
    PARTICIPANTES((short)18, "participantes"),
    TB_CDS_ORIGEM((short)19, "tbCdsOrigem"),
    CODIGO_IBGE_MUNICIPIO_V200((short)20, "codigoIbgeMunicipioV200"),
    CNES_LOCAL_ATIVIDADE((short)21, "cnesLocalAtividade"),
    PROCEDIMENTO((short)22, "procedimento"),
    TURNO((short)23, "turno"),
    HEADER_TRANSPORT((short)24, "headerTransport"),
    TEMAS_PARA_SAUDE((short)25, "temasParaSaude"),
    PRATICAS_EM_SAUDE((short)26, "praticasEmSaude"),
    PSE_EDUCACAO((short)27, "pseEducacao"),
    PSE_SAUDE((short)28, "pseSaude");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // UUID_FICHA
          return UUID_FICHA;
        case 2: // DT_ATIVIDADE_COLETIVA_V200
          return DT_ATIVIDADE_COLETIVA_V200;
        case 3: // NUM_PARTICIPANTES_PROGRAMADOS_V200
          return NUM_PARTICIPANTES_PROGRAMADOS_V200;
        case 4: // OUTRA_LOCALIDADE
          return OUTRA_LOCALIDADE;
        case 5: // HORA_INICIO_V200
          return HORA_INICIO_V200;
        case 6: // HORA_FIM_V200
          return HORA_FIM_V200;
        case 7: // INEP
          return INEP;
        case 8: // RESPONSAVEL_CNS_V200
          return RESPONSAVEL_CNS_V200;
        case 9: // RESPONSAVEL_CNES_UNIDADE_V200
          return RESPONSAVEL_CNES_UNIDADE_V200;
        case 10: // RESPONSAVEL_NUM_INE_V200
          return RESPONSAVEL_NUM_INE_V200;
        case 11: // NUM_PARTICIPANTES
          return NUM_PARTICIPANTES;
        case 12: // NUM_AVALIACOES_ALTERADAS
          return NUM_AVALIACOES_ALTERADAS;
        case 13: // PROFISSIONAIS
          return PROFISSIONAIS;
        case 14: // ATIVIDADE_TIPO
          return ATIVIDADE_TIPO;
        case 15: // TEMAS_PARA_REUNIAO
          return TEMAS_PARA_REUNIAO;
        case 16: // PUBLICO_ALVO
          return PUBLICO_ALVO;
        case 17: // PRATICAS_TEMAS_PARA_SAUDE_V200
          return PRATICAS_TEMAS_PARA_SAUDE_V200;
        case 18: // PARTICIPANTES
          return PARTICIPANTES;
        case 19: // TB_CDS_ORIGEM
          return TB_CDS_ORIGEM;
        case 20: // CODIGO_IBGE_MUNICIPIO_V200
          return CODIGO_IBGE_MUNICIPIO_V200;
        case 21: // CNES_LOCAL_ATIVIDADE
          return CNES_LOCAL_ATIVIDADE;
        case 22: // PROCEDIMENTO
          return PROCEDIMENTO;
        case 23: // TURNO
          return TURNO;
        case 24: // HEADER_TRANSPORT
          return HEADER_TRANSPORT;
        case 25: // TEMAS_PARA_SAUDE
          return TEMAS_PARA_SAUDE;
        case 26: // PRATICAS_EM_SAUDE
          return PRATICAS_EM_SAUDE;
        case 27: // PSE_EDUCACAO
          return PSE_EDUCACAO;
        case 28: // PSE_SAUDE
          return PSE_SAUDE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DTATIVIDADECOLETIVAV200_ISSET_ID = 0;
  private static final int __NUMPARTICIPANTESPROGRAMADOSV200_ISSET_ID = 1;
  private static final int __HORAINICIOV200_ISSET_ID = 2;
  private static final int __HORAFIMV200_ISSET_ID = 3;
  private static final int __INEP_ISSET_ID = 4;
  private static final int __NUMPARTICIPANTES_ISSET_ID = 5;
  private static final int __NUMAVALIACOESALTERADAS_ISSET_ID = 6;
  private static final int __ATIVIDADETIPO_ISSET_ID = 7;
  private static final int __TBCDSORIGEM_ISSET_ID = 8;
  private static final int __TURNO_ISSET_ID = 9;
  private static final int __PSEEDUCACAO_ISSET_ID = 10;
  private static final int __PSESAUDE_ISSET_ID = 11;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.DT_ATIVIDADE_COLETIVA_V200,_Fields.NUM_PARTICIPANTES_PROGRAMADOS_V200,_Fields.OUTRA_LOCALIDADE,_Fields.HORA_INICIO_V200,_Fields.HORA_FIM_V200,_Fields.INEP,_Fields.RESPONSAVEL_CNS_V200,_Fields.RESPONSAVEL_CNES_UNIDADE_V200,_Fields.RESPONSAVEL_NUM_INE_V200,_Fields.NUM_PARTICIPANTES,_Fields.NUM_AVALIACOES_ALTERADAS,_Fields.PROFISSIONAIS,_Fields.ATIVIDADE_TIPO,_Fields.TEMAS_PARA_REUNIAO,_Fields.PUBLICO_ALVO,_Fields.PRATICAS_TEMAS_PARA_SAUDE_V200,_Fields.PARTICIPANTES,_Fields.TB_CDS_ORIGEM,_Fields.CODIGO_IBGE_MUNICIPIO_V200,_Fields.CNES_LOCAL_ATIVIDADE,_Fields.PROCEDIMENTO,_Fields.TURNO,_Fields.HEADER_TRANSPORT,_Fields.TEMAS_PARA_SAUDE,_Fields.PRATICAS_EM_SAUDE,_Fields.PSE_EDUCACAO,_Fields.PSE_SAUDE};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.UUID_FICHA, new org.apache.thrift.meta_data.FieldMetaData("uuidFicha", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DT_ATIVIDADE_COLETIVA_V200, new org.apache.thrift.meta_data.FieldMetaData("dtAtividadeColetivaV200", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_PARTICIPANTES_PROGRAMADOS_V200, new org.apache.thrift.meta_data.FieldMetaData("numParticipantesProgramadosV200", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.OUTRA_LOCALIDADE, new org.apache.thrift.meta_data.FieldMetaData("outraLocalidade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HORA_INICIO_V200, new org.apache.thrift.meta_data.FieldMetaData("horaInicioV200", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.HORA_FIM_V200, new org.apache.thrift.meta_data.FieldMetaData("horaFimV200", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INEP, new org.apache.thrift.meta_data.FieldMetaData("inep", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RESPONSAVEL_CNS_V200, new org.apache.thrift.meta_data.FieldMetaData("responsavelCnsV200", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESPONSAVEL_CNES_UNIDADE_V200, new org.apache.thrift.meta_data.FieldMetaData("responsavelCnesUnidadeV200", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESPONSAVEL_NUM_INE_V200, new org.apache.thrift.meta_data.FieldMetaData("responsavelNumIneV200", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUM_PARTICIPANTES, new org.apache.thrift.meta_data.FieldMetaData("numParticipantes", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUM_AVALIACOES_ALTERADAS, new org.apache.thrift.meta_data.FieldMetaData("numAvaliacoesAlteradas", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFISSIONAIS, new org.apache.thrift.meta_data.FieldMetaData("profissionais", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProfissionalCboRowItemThrift.class))));
    tmpMap.put(_Fields.ATIVIDADE_TIPO, new org.apache.thrift.meta_data.FieldMetaData("atividadeTipo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TEMAS_PARA_REUNIAO, new org.apache.thrift.meta_data.FieldMetaData("temasParaReuniao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.PUBLICO_ALVO, new org.apache.thrift.meta_data.FieldMetaData("publicoAlvo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.PRATICAS_TEMAS_PARA_SAUDE_V200, new org.apache.thrift.meta_data.FieldMetaData("praticasTemasParaSaudeV200", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.PARTICIPANTES, new org.apache.thrift.meta_data.FieldMetaData("participantes", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ParticipanteRowItemThrift.class))));
    tmpMap.put(_Fields.TB_CDS_ORIGEM, new org.apache.thrift.meta_data.FieldMetaData("tbCdsOrigem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CODIGO_IBGE_MUNICIPIO_V200, new org.apache.thrift.meta_data.FieldMetaData("codigoIbgeMunicipioV200", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CNES_LOCAL_ATIVIDADE, new org.apache.thrift.meta_data.FieldMetaData("cnesLocalAtividade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROCEDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("procedimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TURNO, new org.apache.thrift.meta_data.FieldMetaData("turno", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.HEADER_TRANSPORT, new org.apache.thrift.meta_data.FieldMetaData("headerTransport", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift.class)));
    tmpMap.put(_Fields.TEMAS_PARA_SAUDE, new org.apache.thrift.meta_data.FieldMetaData("temasParaSaude", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.PRATICAS_EM_SAUDE, new org.apache.thrift.meta_data.FieldMetaData("praticasEmSaude", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.PSE_EDUCACAO, new org.apache.thrift.meta_data.FieldMetaData("pseEducacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.PSE_SAUDE, new org.apache.thrift.meta_data.FieldMetaData("pseSaude", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FichaAtividadeColetivaThrift.class, metaDataMap);
  }

  public FichaAtividadeColetivaThrift() {
  }

  public FichaAtividadeColetivaThrift(
    String uuidFicha)
  {
    this();
    this.uuidFicha = uuidFicha;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FichaAtividadeColetivaThrift(FichaAtividadeColetivaThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetUuidFicha()) {
      this.uuidFicha = other.uuidFicha;
    }
    this.dtAtividadeColetivaV200 = other.dtAtividadeColetivaV200;
    this.numParticipantesProgramadosV200 = other.numParticipantesProgramadosV200;
    if (other.isSetOutraLocalidade()) {
      this.outraLocalidade = other.outraLocalidade;
    }
    this.horaInicioV200 = other.horaInicioV200;
    this.horaFimV200 = other.horaFimV200;
    this.inep = other.inep;
    if (other.isSetResponsavelCnsV200()) {
      this.responsavelCnsV200 = other.responsavelCnsV200;
    }
    if (other.isSetResponsavelCnesUnidadeV200()) {
      this.responsavelCnesUnidadeV200 = other.responsavelCnesUnidadeV200;
    }
    if (other.isSetResponsavelNumIneV200()) {
      this.responsavelNumIneV200 = other.responsavelNumIneV200;
    }
    this.numParticipantes = other.numParticipantes;
    this.numAvaliacoesAlteradas = other.numAvaliacoesAlteradas;
    if (other.isSetProfissionais()) {
      List<ProfissionalCboRowItemThrift> __this__profissionais = new ArrayList<ProfissionalCboRowItemThrift>(other.profissionais.size());
      for (ProfissionalCboRowItemThrift other_element : other.profissionais) {
        __this__profissionais.add(new ProfissionalCboRowItemThrift(other_element));
      }
      this.profissionais = __this__profissionais;
    }
    this.atividadeTipo = other.atividadeTipo;
    if (other.isSetTemasParaReuniao()) {
      List<Long> __this__temasParaReuniao = new ArrayList<Long>(other.temasParaReuniao);
      this.temasParaReuniao = __this__temasParaReuniao;
    }
    if (other.isSetPublicoAlvo()) {
      List<Long> __this__publicoAlvo = new ArrayList<Long>(other.publicoAlvo);
      this.publicoAlvo = __this__publicoAlvo;
    }
    if (other.isSetPraticasTemasParaSaudeV200()) {
      List<Long> __this__praticasTemasParaSaudeV200 = new ArrayList<Long>(other.praticasTemasParaSaudeV200);
      this.praticasTemasParaSaudeV200 = __this__praticasTemasParaSaudeV200;
    }
    if (other.isSetParticipantes()) {
      List<ParticipanteRowItemThrift> __this__participantes = new ArrayList<ParticipanteRowItemThrift>(other.participantes.size());
      for (ParticipanteRowItemThrift other_element : other.participantes) {
        __this__participantes.add(new ParticipanteRowItemThrift(other_element));
      }
      this.participantes = __this__participantes;
    }
    this.tbCdsOrigem = other.tbCdsOrigem;
    if (other.isSetCodigoIbgeMunicipioV200()) {
      this.codigoIbgeMunicipioV200 = other.codigoIbgeMunicipioV200;
    }
    if (other.isSetCnesLocalAtividade()) {
      this.cnesLocalAtividade = other.cnesLocalAtividade;
    }
    if (other.isSetProcedimento()) {
      this.procedimento = other.procedimento;
    }
    this.turno = other.turno;
    if (other.isSetHeaderTransport()) {
      this.headerTransport = new br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift(other.headerTransport);
    }
    if (other.isSetTemasParaSaude()) {
      List<Long> __this__temasParaSaude = new ArrayList<Long>(other.temasParaSaude);
      this.temasParaSaude = __this__temasParaSaude;
    }
    if (other.isSetPraticasEmSaude()) {
      List<Long> __this__praticasEmSaude = new ArrayList<Long>(other.praticasEmSaude);
      this.praticasEmSaude = __this__praticasEmSaude;
    }
    this.pseEducacao = other.pseEducacao;
    this.pseSaude = other.pseSaude;
  }

  public FichaAtividadeColetivaThrift deepCopy() {
    return new FichaAtividadeColetivaThrift(this);
  }

  @Override
  public void clear() {
    this.uuidFicha = null;
    setDtAtividadeColetivaV200IsSet(false);
    this.dtAtividadeColetivaV200 = 0;
    setNumParticipantesProgramadosV200IsSet(false);
    this.numParticipantesProgramadosV200 = 0;
    this.outraLocalidade = null;
    setHoraInicioV200IsSet(false);
    this.horaInicioV200 = 0;
    setHoraFimV200IsSet(false);
    this.horaFimV200 = 0;
    setInepIsSet(false);
    this.inep = 0;
    this.responsavelCnsV200 = null;
    this.responsavelCnesUnidadeV200 = null;
    this.responsavelNumIneV200 = null;
    setNumParticipantesIsSet(false);
    this.numParticipantes = 0;
    setNumAvaliacoesAlteradasIsSet(false);
    this.numAvaliacoesAlteradas = 0;
    this.profissionais = null;
    setAtividadeTipoIsSet(false);
    this.atividadeTipo = 0;
    this.temasParaReuniao = null;
    this.publicoAlvo = null;
    this.praticasTemasParaSaudeV200 = null;
    this.participantes = null;
    setTbCdsOrigemIsSet(false);
    this.tbCdsOrigem = 0;
    this.codigoIbgeMunicipioV200 = null;
    this.cnesLocalAtividade = null;
    this.procedimento = null;
    setTurnoIsSet(false);
    this.turno = 0;
    this.headerTransport = null;
    this.temasParaSaude = null;
    this.praticasEmSaude = null;
    setPseEducacaoIsSet(false);
    this.pseEducacao = false;
    setPseSaudeIsSet(false);
    this.pseSaude = false;
  }

  public String getUuidFicha() {
    return this.uuidFicha;
  }

  public void setUuidFicha(String uuidFicha) {
    this.uuidFicha = uuidFicha;
  }

  public void unsetUuidFicha() {
    this.uuidFicha = null;
  }

  /** Returns true if field uuidFicha is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidFicha() {
    return this.uuidFicha != null;
  }

  public void setUuidFichaIsSet(boolean value) {
    if (!value) {
      this.uuidFicha = null;
    }
  }

  public long getDtAtividadeColetivaV200() {
    return this.dtAtividadeColetivaV200;
  }

  public void setDtAtividadeColetivaV200(long dtAtividadeColetivaV200) {
    this.dtAtividadeColetivaV200 = dtAtividadeColetivaV200;
    setDtAtividadeColetivaV200IsSet(true);
  }

  public void unsetDtAtividadeColetivaV200() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DTATIVIDADECOLETIVAV200_ISSET_ID);
  }

  /** Returns true if field dtAtividadeColetivaV200 is set (has been assigned a value) and false otherwise */
  public boolean isSetDtAtividadeColetivaV200() {
    return EncodingUtils.testBit(__isset_bitfield, __DTATIVIDADECOLETIVAV200_ISSET_ID);
  }

  public void setDtAtividadeColetivaV200IsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DTATIVIDADECOLETIVAV200_ISSET_ID, value);
  }

  public int getNumParticipantesProgramadosV200() {
    return this.numParticipantesProgramadosV200;
  }

  public void setNumParticipantesProgramadosV200(int numParticipantesProgramadosV200) {
    this.numParticipantesProgramadosV200 = numParticipantesProgramadosV200;
    setNumParticipantesProgramadosV200IsSet(true);
  }

  public void unsetNumParticipantesProgramadosV200() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMPARTICIPANTESPROGRAMADOSV200_ISSET_ID);
  }

  /** Returns true if field numParticipantesProgramadosV200 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumParticipantesProgramadosV200() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMPARTICIPANTESPROGRAMADOSV200_ISSET_ID);
  }

  public void setNumParticipantesProgramadosV200IsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMPARTICIPANTESPROGRAMADOSV200_ISSET_ID, value);
  }

  public String getOutraLocalidade() {
    return this.outraLocalidade;
  }

  public void setOutraLocalidade(String outraLocalidade) {
    this.outraLocalidade = outraLocalidade;
  }

  public void unsetOutraLocalidade() {
    this.outraLocalidade = null;
  }

  /** Returns true if field outraLocalidade is set (has been assigned a value) and false otherwise */
  public boolean isSetOutraLocalidade() {
    return this.outraLocalidade != null;
  }

  public void setOutraLocalidadeIsSet(boolean value) {
    if (!value) {
      this.outraLocalidade = null;
    }
  }

  public long getHoraInicioV200() {
    return this.horaInicioV200;
  }

  public void setHoraInicioV200(long horaInicioV200) {
    this.horaInicioV200 = horaInicioV200;
    setHoraInicioV200IsSet(true);
  }

  public void unsetHoraInicioV200() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HORAINICIOV200_ISSET_ID);
  }

  /** Returns true if field horaInicioV200 is set (has been assigned a value) and false otherwise */
  public boolean isSetHoraInicioV200() {
    return EncodingUtils.testBit(__isset_bitfield, __HORAINICIOV200_ISSET_ID);
  }

  public void setHoraInicioV200IsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HORAINICIOV200_ISSET_ID, value);
  }

  public long getHoraFimV200() {
    return this.horaFimV200;
  }

  public void setHoraFimV200(long horaFimV200) {
    this.horaFimV200 = horaFimV200;
    setHoraFimV200IsSet(true);
  }

  public void unsetHoraFimV200() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HORAFIMV200_ISSET_ID);
  }

  /** Returns true if field horaFimV200 is set (has been assigned a value) and false otherwise */
  public boolean isSetHoraFimV200() {
    return EncodingUtils.testBit(__isset_bitfield, __HORAFIMV200_ISSET_ID);
  }

  public void setHoraFimV200IsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HORAFIMV200_ISSET_ID, value);
  }

  public long getInep() {
    return this.inep;
  }

  public void setInep(long inep) {
    this.inep = inep;
    setInepIsSet(true);
  }

  public void unsetInep() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INEP_ISSET_ID);
  }

  /** Returns true if field inep is set (has been assigned a value) and false otherwise */
  public boolean isSetInep() {
    return EncodingUtils.testBit(__isset_bitfield, __INEP_ISSET_ID);
  }

  public void setInepIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INEP_ISSET_ID, value);
  }

  public String getResponsavelCnsV200() {
    return this.responsavelCnsV200;
  }

  public void setResponsavelCnsV200(String responsavelCnsV200) {
    this.responsavelCnsV200 = responsavelCnsV200;
  }

  public void unsetResponsavelCnsV200() {
    this.responsavelCnsV200 = null;
  }

  /** Returns true if field responsavelCnsV200 is set (has been assigned a value) and false otherwise */
  public boolean isSetResponsavelCnsV200() {
    return this.responsavelCnsV200 != null;
  }

  public void setResponsavelCnsV200IsSet(boolean value) {
    if (!value) {
      this.responsavelCnsV200 = null;
    }
  }

  public String getResponsavelCnesUnidadeV200() {
    return this.responsavelCnesUnidadeV200;
  }

  public void setResponsavelCnesUnidadeV200(String responsavelCnesUnidadeV200) {
    this.responsavelCnesUnidadeV200 = responsavelCnesUnidadeV200;
  }

  public void unsetResponsavelCnesUnidadeV200() {
    this.responsavelCnesUnidadeV200 = null;
  }

  /** Returns true if field responsavelCnesUnidadeV200 is set (has been assigned a value) and false otherwise */
  public boolean isSetResponsavelCnesUnidadeV200() {
    return this.responsavelCnesUnidadeV200 != null;
  }

  public void setResponsavelCnesUnidadeV200IsSet(boolean value) {
    if (!value) {
      this.responsavelCnesUnidadeV200 = null;
    }
  }

  public String getResponsavelNumIneV200() {
    return this.responsavelNumIneV200;
  }

  public void setResponsavelNumIneV200(String responsavelNumIneV200) {
    this.responsavelNumIneV200 = responsavelNumIneV200;
  }

  public void unsetResponsavelNumIneV200() {
    this.responsavelNumIneV200 = null;
  }

  /** Returns true if field responsavelNumIneV200 is set (has been assigned a value) and false otherwise */
  public boolean isSetResponsavelNumIneV200() {
    return this.responsavelNumIneV200 != null;
  }

  public void setResponsavelNumIneV200IsSet(boolean value) {
    if (!value) {
      this.responsavelNumIneV200 = null;
    }
  }

  public int getNumParticipantes() {
    return this.numParticipantes;
  }

  public void setNumParticipantes(int numParticipantes) {
    this.numParticipantes = numParticipantes;
    setNumParticipantesIsSet(true);
  }

  public void unsetNumParticipantes() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMPARTICIPANTES_ISSET_ID);
  }

  /** Returns true if field numParticipantes is set (has been assigned a value) and false otherwise */
  public boolean isSetNumParticipantes() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMPARTICIPANTES_ISSET_ID);
  }

  public void setNumParticipantesIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMPARTICIPANTES_ISSET_ID, value);
  }

  public int getNumAvaliacoesAlteradas() {
    return this.numAvaliacoesAlteradas;
  }

  public void setNumAvaliacoesAlteradas(int numAvaliacoesAlteradas) {
    this.numAvaliacoesAlteradas = numAvaliacoesAlteradas;
    setNumAvaliacoesAlteradasIsSet(true);
  }

  public void unsetNumAvaliacoesAlteradas() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMAVALIACOESALTERADAS_ISSET_ID);
  }

  /** Returns true if field numAvaliacoesAlteradas is set (has been assigned a value) and false otherwise */
  public boolean isSetNumAvaliacoesAlteradas() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMAVALIACOESALTERADAS_ISSET_ID);
  }

  public void setNumAvaliacoesAlteradasIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMAVALIACOESALTERADAS_ISSET_ID, value);
  }

  public int getProfissionaisSize() {
    return (this.profissionais == null) ? 0 : this.profissionais.size();
  }

  public java.util.Iterator<ProfissionalCboRowItemThrift> getProfissionaisIterator() {
    return (this.profissionais == null) ? null : this.profissionais.iterator();
  }

  public void addToProfissionais(ProfissionalCboRowItemThrift elem) {
    if (this.profissionais == null) {
      this.profissionais = new ArrayList<ProfissionalCboRowItemThrift>();
    }
    this.profissionais.add(elem);
  }

  public List<ProfissionalCboRowItemThrift> getProfissionais() {
    return this.profissionais;
  }

  public void setProfissionais(List<ProfissionalCboRowItemThrift> profissionais) {
    this.profissionais = profissionais;
  }

  public void unsetProfissionais() {
    this.profissionais = null;
  }

  /** Returns true if field profissionais is set (has been assigned a value) and false otherwise */
  public boolean isSetProfissionais() {
    return this.profissionais != null;
  }

  public void setProfissionaisIsSet(boolean value) {
    if (!value) {
      this.profissionais = null;
    }
  }

  public long getAtividadeTipo() {
    return this.atividadeTipo;
  }

  public void setAtividadeTipo(long atividadeTipo) {
    this.atividadeTipo = atividadeTipo;
    setAtividadeTipoIsSet(true);
  }

  public void unsetAtividadeTipo() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATIVIDADETIPO_ISSET_ID);
  }

  /** Returns true if field atividadeTipo is set (has been assigned a value) and false otherwise */
  public boolean isSetAtividadeTipo() {
    return EncodingUtils.testBit(__isset_bitfield, __ATIVIDADETIPO_ISSET_ID);
  }

  public void setAtividadeTipoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATIVIDADETIPO_ISSET_ID, value);
  }

  public int getTemasParaReuniaoSize() {
    return (this.temasParaReuniao == null) ? 0 : this.temasParaReuniao.size();
  }

  public java.util.Iterator<Long> getTemasParaReuniaoIterator() {
    return (this.temasParaReuniao == null) ? null : this.temasParaReuniao.iterator();
  }

  public void addToTemasParaReuniao(long elem) {
    if (this.temasParaReuniao == null) {
      this.temasParaReuniao = new ArrayList<Long>();
    }
    this.temasParaReuniao.add(elem);
  }

  public List<Long> getTemasParaReuniao() {
    return this.temasParaReuniao;
  }

  public void setTemasParaReuniao(List<Long> temasParaReuniao) {
    this.temasParaReuniao = temasParaReuniao;
  }

  public void unsetTemasParaReuniao() {
    this.temasParaReuniao = null;
  }

  /** Returns true if field temasParaReuniao is set (has been assigned a value) and false otherwise */
  public boolean isSetTemasParaReuniao() {
    return this.temasParaReuniao != null;
  }

  public void setTemasParaReuniaoIsSet(boolean value) {
    if (!value) {
      this.temasParaReuniao = null;
    }
  }

  public int getPublicoAlvoSize() {
    return (this.publicoAlvo == null) ? 0 : this.publicoAlvo.size();
  }

  public java.util.Iterator<Long> getPublicoAlvoIterator() {
    return (this.publicoAlvo == null) ? null : this.publicoAlvo.iterator();
  }

  public void addToPublicoAlvo(long elem) {
    if (this.publicoAlvo == null) {
      this.publicoAlvo = new ArrayList<Long>();
    }
    this.publicoAlvo.add(elem);
  }

  public List<Long> getPublicoAlvo() {
    return this.publicoAlvo;
  }

  public void setPublicoAlvo(List<Long> publicoAlvo) {
    this.publicoAlvo = publicoAlvo;
  }

  public void unsetPublicoAlvo() {
    this.publicoAlvo = null;
  }

  /** Returns true if field publicoAlvo is set (has been assigned a value) and false otherwise */
  public boolean isSetPublicoAlvo() {
    return this.publicoAlvo != null;
  }

  public void setPublicoAlvoIsSet(boolean value) {
    if (!value) {
      this.publicoAlvo = null;
    }
  }

  public int getPraticasTemasParaSaudeV200Size() {
    return (this.praticasTemasParaSaudeV200 == null) ? 0 : this.praticasTemasParaSaudeV200.size();
  }

  public java.util.Iterator<Long> getPraticasTemasParaSaudeV200Iterator() {
    return (this.praticasTemasParaSaudeV200 == null) ? null : this.praticasTemasParaSaudeV200.iterator();
  }

  public void addToPraticasTemasParaSaudeV200(long elem) {
    if (this.praticasTemasParaSaudeV200 == null) {
      this.praticasTemasParaSaudeV200 = new ArrayList<Long>();
    }
    this.praticasTemasParaSaudeV200.add(elem);
  }

  public List<Long> getPraticasTemasParaSaudeV200() {
    return this.praticasTemasParaSaudeV200;
  }

  public void setPraticasTemasParaSaudeV200(List<Long> praticasTemasParaSaudeV200) {
    this.praticasTemasParaSaudeV200 = praticasTemasParaSaudeV200;
  }

  public void unsetPraticasTemasParaSaudeV200() {
    this.praticasTemasParaSaudeV200 = null;
  }

  /** Returns true if field praticasTemasParaSaudeV200 is set (has been assigned a value) and false otherwise */
  public boolean isSetPraticasTemasParaSaudeV200() {
    return this.praticasTemasParaSaudeV200 != null;
  }

  public void setPraticasTemasParaSaudeV200IsSet(boolean value) {
    if (!value) {
      this.praticasTemasParaSaudeV200 = null;
    }
  }

  public int getParticipantesSize() {
    return (this.participantes == null) ? 0 : this.participantes.size();
  }

  public java.util.Iterator<ParticipanteRowItemThrift> getParticipantesIterator() {
    return (this.participantes == null) ? null : this.participantes.iterator();
  }

  public void addToParticipantes(ParticipanteRowItemThrift elem) {
    if (this.participantes == null) {
      this.participantes = new ArrayList<ParticipanteRowItemThrift>();
    }
    this.participantes.add(elem);
  }

  public List<ParticipanteRowItemThrift> getParticipantes() {
    return this.participantes;
  }

  public void setParticipantes(List<ParticipanteRowItemThrift> participantes) {
    this.participantes = participantes;
  }

  public void unsetParticipantes() {
    this.participantes = null;
  }

  /** Returns true if field participantes is set (has been assigned a value) and false otherwise */
  public boolean isSetParticipantes() {
    return this.participantes != null;
  }

  public void setParticipantesIsSet(boolean value) {
    if (!value) {
      this.participantes = null;
    }
  }

  public int getTbCdsOrigem() {
    return this.tbCdsOrigem;
  }

  public void setTbCdsOrigem(int tbCdsOrigem) {
    this.tbCdsOrigem = tbCdsOrigem;
    setTbCdsOrigemIsSet(true);
  }

  public void unsetTbCdsOrigem() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TBCDSORIGEM_ISSET_ID);
  }

  /** Returns true if field tbCdsOrigem is set (has been assigned a value) and false otherwise */
  public boolean isSetTbCdsOrigem() {
    return EncodingUtils.testBit(__isset_bitfield, __TBCDSORIGEM_ISSET_ID);
  }

  public void setTbCdsOrigemIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TBCDSORIGEM_ISSET_ID, value);
  }

  public String getCodigoIbgeMunicipioV200() {
    return this.codigoIbgeMunicipioV200;
  }

  public void setCodigoIbgeMunicipioV200(String codigoIbgeMunicipioV200) {
    this.codigoIbgeMunicipioV200 = codigoIbgeMunicipioV200;
  }

  public void unsetCodigoIbgeMunicipioV200() {
    this.codigoIbgeMunicipioV200 = null;
  }

  /** Returns true if field codigoIbgeMunicipioV200 is set (has been assigned a value) and false otherwise */
  public boolean isSetCodigoIbgeMunicipioV200() {
    return this.codigoIbgeMunicipioV200 != null;
  }

  public void setCodigoIbgeMunicipioV200IsSet(boolean value) {
    if (!value) {
      this.codigoIbgeMunicipioV200 = null;
    }
  }

  public String getCnesLocalAtividade() {
    return this.cnesLocalAtividade;
  }

  public void setCnesLocalAtividade(String cnesLocalAtividade) {
    this.cnesLocalAtividade = cnesLocalAtividade;
  }

  public void unsetCnesLocalAtividade() {
    this.cnesLocalAtividade = null;
  }

  /** Returns true if field cnesLocalAtividade is set (has been assigned a value) and false otherwise */
  public boolean isSetCnesLocalAtividade() {
    return this.cnesLocalAtividade != null;
  }

  public void setCnesLocalAtividadeIsSet(boolean value) {
    if (!value) {
      this.cnesLocalAtividade = null;
    }
  }

  public String getProcedimento() {
    return this.procedimento;
  }

  public void setProcedimento(String procedimento) {
    this.procedimento = procedimento;
  }

  public void unsetProcedimento() {
    this.procedimento = null;
  }

  /** Returns true if field procedimento is set (has been assigned a value) and false otherwise */
  public boolean isSetProcedimento() {
    return this.procedimento != null;
  }

  public void setProcedimentoIsSet(boolean value) {
    if (!value) {
      this.procedimento = null;
    }
  }

  public long getTurno() {
    return this.turno;
  }

  public void setTurno(long turno) {
    this.turno = turno;
    setTurnoIsSet(true);
  }

  public void unsetTurno() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  /** Returns true if field turno is set (has been assigned a value) and false otherwise */
  public boolean isSetTurno() {
    return EncodingUtils.testBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  public void setTurnoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TURNO_ISSET_ID, value);
  }

  public br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift getHeaderTransport() {
    return this.headerTransport;
  }

  public void setHeaderTransport(br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift headerTransport) {
    this.headerTransport = headerTransport;
  }

  public void unsetHeaderTransport() {
    this.headerTransport = null;
  }

  /** Returns true if field headerTransport is set (has been assigned a value) and false otherwise */
  public boolean isSetHeaderTransport() {
    return this.headerTransport != null;
  }

  public void setHeaderTransportIsSet(boolean value) {
    if (!value) {
      this.headerTransport = null;
    }
  }

  public int getTemasParaSaudeSize() {
    return (this.temasParaSaude == null) ? 0 : this.temasParaSaude.size();
  }

  public java.util.Iterator<Long> getTemasParaSaudeIterator() {
    return (this.temasParaSaude == null) ? null : this.temasParaSaude.iterator();
  }

  public void addToTemasParaSaude(long elem) {
    if (this.temasParaSaude == null) {
      this.temasParaSaude = new ArrayList<Long>();
    }
    this.temasParaSaude.add(elem);
  }

  public List<Long> getTemasParaSaude() {
    return this.temasParaSaude;
  }

  public void setTemasParaSaude(List<Long> temasParaSaude) {
    this.temasParaSaude = temasParaSaude;
  }

  public void unsetTemasParaSaude() {
    this.temasParaSaude = null;
  }

  /** Returns true if field temasParaSaude is set (has been assigned a value) and false otherwise */
  public boolean isSetTemasParaSaude() {
    return this.temasParaSaude != null;
  }

  public void setTemasParaSaudeIsSet(boolean value) {
    if (!value) {
      this.temasParaSaude = null;
    }
  }

  public int getPraticasEmSaudeSize() {
    return (this.praticasEmSaude == null) ? 0 : this.praticasEmSaude.size();
  }

  public java.util.Iterator<Long> getPraticasEmSaudeIterator() {
    return (this.praticasEmSaude == null) ? null : this.praticasEmSaude.iterator();
  }

  public void addToPraticasEmSaude(long elem) {
    if (this.praticasEmSaude == null) {
      this.praticasEmSaude = new ArrayList<Long>();
    }
    this.praticasEmSaude.add(elem);
  }

  public List<Long> getPraticasEmSaude() {
    return this.praticasEmSaude;
  }

  public void setPraticasEmSaude(List<Long> praticasEmSaude) {
    this.praticasEmSaude = praticasEmSaude;
  }

  public void unsetPraticasEmSaude() {
    this.praticasEmSaude = null;
  }

  /** Returns true if field praticasEmSaude is set (has been assigned a value) and false otherwise */
  public boolean isSetPraticasEmSaude() {
    return this.praticasEmSaude != null;
  }

  public void setPraticasEmSaudeIsSet(boolean value) {
    if (!value) {
      this.praticasEmSaude = null;
    }
  }

  public boolean isPseEducacao() {
    return this.pseEducacao;
  }

  public void setPseEducacao(boolean pseEducacao) {
    this.pseEducacao = pseEducacao;
    setPseEducacaoIsSet(true);
  }

  public void unsetPseEducacao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PSEEDUCACAO_ISSET_ID);
  }

  /** Returns true if field pseEducacao is set (has been assigned a value) and false otherwise */
  public boolean isSetPseEducacao() {
    return EncodingUtils.testBit(__isset_bitfield, __PSEEDUCACAO_ISSET_ID);
  }

  public void setPseEducacaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PSEEDUCACAO_ISSET_ID, value);
  }

  public boolean isPseSaude() {
    return this.pseSaude;
  }

  public void setPseSaude(boolean pseSaude) {
    this.pseSaude = pseSaude;
    setPseSaudeIsSet(true);
  }

  public void unsetPseSaude() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PSESAUDE_ISSET_ID);
  }

  /** Returns true if field pseSaude is set (has been assigned a value) and false otherwise */
  public boolean isSetPseSaude() {
    return EncodingUtils.testBit(__isset_bitfield, __PSESAUDE_ISSET_ID);
  }

  public void setPseSaudeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PSESAUDE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case UUID_FICHA:
      if (value == null) {
        unsetUuidFicha();
      } else {
        setUuidFicha((String)value);
      }
      break;

    case DT_ATIVIDADE_COLETIVA_V200:
      if (value == null) {
        unsetDtAtividadeColetivaV200();
      } else {
        setDtAtividadeColetivaV200((Long)value);
      }
      break;

    case NUM_PARTICIPANTES_PROGRAMADOS_V200:
      if (value == null) {
        unsetNumParticipantesProgramadosV200();
      } else {
        setNumParticipantesProgramadosV200((Integer)value);
      }
      break;

    case OUTRA_LOCALIDADE:
      if (value == null) {
        unsetOutraLocalidade();
      } else {
        setOutraLocalidade((String)value);
      }
      break;

    case HORA_INICIO_V200:
      if (value == null) {
        unsetHoraInicioV200();
      } else {
        setHoraInicioV200((Long)value);
      }
      break;

    case HORA_FIM_V200:
      if (value == null) {
        unsetHoraFimV200();
      } else {
        setHoraFimV200((Long)value);
      }
      break;

    case INEP:
      if (value == null) {
        unsetInep();
      } else {
        setInep((Long)value);
      }
      break;

    case RESPONSAVEL_CNS_V200:
      if (value == null) {
        unsetResponsavelCnsV200();
      } else {
        setResponsavelCnsV200((String)value);
      }
      break;

    case RESPONSAVEL_CNES_UNIDADE_V200:
      if (value == null) {
        unsetResponsavelCnesUnidadeV200();
      } else {
        setResponsavelCnesUnidadeV200((String)value);
      }
      break;

    case RESPONSAVEL_NUM_INE_V200:
      if (value == null) {
        unsetResponsavelNumIneV200();
      } else {
        setResponsavelNumIneV200((String)value);
      }
      break;

    case NUM_PARTICIPANTES:
      if (value == null) {
        unsetNumParticipantes();
      } else {
        setNumParticipantes((Integer)value);
      }
      break;

    case NUM_AVALIACOES_ALTERADAS:
      if (value == null) {
        unsetNumAvaliacoesAlteradas();
      } else {
        setNumAvaliacoesAlteradas((Integer)value);
      }
      break;

    case PROFISSIONAIS:
      if (value == null) {
        unsetProfissionais();
      } else {
        setProfissionais((List<ProfissionalCboRowItemThrift>)value);
      }
      break;

    case ATIVIDADE_TIPO:
      if (value == null) {
        unsetAtividadeTipo();
      } else {
        setAtividadeTipo((Long)value);
      }
      break;

    case TEMAS_PARA_REUNIAO:
      if (value == null) {
        unsetTemasParaReuniao();
      } else {
        setTemasParaReuniao((List<Long>)value);
      }
      break;

    case PUBLICO_ALVO:
      if (value == null) {
        unsetPublicoAlvo();
      } else {
        setPublicoAlvo((List<Long>)value);
      }
      break;

    case PRATICAS_TEMAS_PARA_SAUDE_V200:
      if (value == null) {
        unsetPraticasTemasParaSaudeV200();
      } else {
        setPraticasTemasParaSaudeV200((List<Long>)value);
      }
      break;

    case PARTICIPANTES:
      if (value == null) {
        unsetParticipantes();
      } else {
        setParticipantes((List<ParticipanteRowItemThrift>)value);
      }
      break;

    case TB_CDS_ORIGEM:
      if (value == null) {
        unsetTbCdsOrigem();
      } else {
        setTbCdsOrigem((Integer)value);
      }
      break;

    case CODIGO_IBGE_MUNICIPIO_V200:
      if (value == null) {
        unsetCodigoIbgeMunicipioV200();
      } else {
        setCodigoIbgeMunicipioV200((String)value);
      }
      break;

    case CNES_LOCAL_ATIVIDADE:
      if (value == null) {
        unsetCnesLocalAtividade();
      } else {
        setCnesLocalAtividade((String)value);
      }
      break;

    case PROCEDIMENTO:
      if (value == null) {
        unsetProcedimento();
      } else {
        setProcedimento((String)value);
      }
      break;

    case TURNO:
      if (value == null) {
        unsetTurno();
      } else {
        setTurno((Long)value);
      }
      break;

    case HEADER_TRANSPORT:
      if (value == null) {
        unsetHeaderTransport();
      } else {
        setHeaderTransport((br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift)value);
      }
      break;

    case TEMAS_PARA_SAUDE:
      if (value == null) {
        unsetTemasParaSaude();
      } else {
        setTemasParaSaude((List<Long>)value);
      }
      break;

    case PRATICAS_EM_SAUDE:
      if (value == null) {
        unsetPraticasEmSaude();
      } else {
        setPraticasEmSaude((List<Long>)value);
      }
      break;

    case PSE_EDUCACAO:
      if (value == null) {
        unsetPseEducacao();
      } else {
        setPseEducacao((Boolean)value);
      }
      break;

    case PSE_SAUDE:
      if (value == null) {
        unsetPseSaude();
      } else {
        setPseSaude((Boolean)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case UUID_FICHA:
      return getUuidFicha();

    case DT_ATIVIDADE_COLETIVA_V200:
      return getDtAtividadeColetivaV200();

    case NUM_PARTICIPANTES_PROGRAMADOS_V200:
      return getNumParticipantesProgramadosV200();

    case OUTRA_LOCALIDADE:
      return getOutraLocalidade();

    case HORA_INICIO_V200:
      return getHoraInicioV200();

    case HORA_FIM_V200:
      return getHoraFimV200();

    case INEP:
      return getInep();

    case RESPONSAVEL_CNS_V200:
      return getResponsavelCnsV200();

    case RESPONSAVEL_CNES_UNIDADE_V200:
      return getResponsavelCnesUnidadeV200();

    case RESPONSAVEL_NUM_INE_V200:
      return getResponsavelNumIneV200();

    case NUM_PARTICIPANTES:
      return getNumParticipantes();

    case NUM_AVALIACOES_ALTERADAS:
      return getNumAvaliacoesAlteradas();

    case PROFISSIONAIS:
      return getProfissionais();

    case ATIVIDADE_TIPO:
      return getAtividadeTipo();

    case TEMAS_PARA_REUNIAO:
      return getTemasParaReuniao();

    case PUBLICO_ALVO:
      return getPublicoAlvo();

    case PRATICAS_TEMAS_PARA_SAUDE_V200:
      return getPraticasTemasParaSaudeV200();

    case PARTICIPANTES:
      return getParticipantes();

    case TB_CDS_ORIGEM:
      return getTbCdsOrigem();

    case CODIGO_IBGE_MUNICIPIO_V200:
      return getCodigoIbgeMunicipioV200();

    case CNES_LOCAL_ATIVIDADE:
      return getCnesLocalAtividade();

    case PROCEDIMENTO:
      return getProcedimento();

    case TURNO:
      return getTurno();

    case HEADER_TRANSPORT:
      return getHeaderTransport();

    case TEMAS_PARA_SAUDE:
      return getTemasParaSaude();

    case PRATICAS_EM_SAUDE:
      return getPraticasEmSaude();

    case PSE_EDUCACAO:
      return isPseEducacao();

    case PSE_SAUDE:
      return isPseSaude();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case UUID_FICHA:
      return isSetUuidFicha();
    case DT_ATIVIDADE_COLETIVA_V200:
      return isSetDtAtividadeColetivaV200();
    case NUM_PARTICIPANTES_PROGRAMADOS_V200:
      return isSetNumParticipantesProgramadosV200();
    case OUTRA_LOCALIDADE:
      return isSetOutraLocalidade();
    case HORA_INICIO_V200:
      return isSetHoraInicioV200();
    case HORA_FIM_V200:
      return isSetHoraFimV200();
    case INEP:
      return isSetInep();
    case RESPONSAVEL_CNS_V200:
      return isSetResponsavelCnsV200();
    case RESPONSAVEL_CNES_UNIDADE_V200:
      return isSetResponsavelCnesUnidadeV200();
    case RESPONSAVEL_NUM_INE_V200:
      return isSetResponsavelNumIneV200();
    case NUM_PARTICIPANTES:
      return isSetNumParticipantes();
    case NUM_AVALIACOES_ALTERADAS:
      return isSetNumAvaliacoesAlteradas();
    case PROFISSIONAIS:
      return isSetProfissionais();
    case ATIVIDADE_TIPO:
      return isSetAtividadeTipo();
    case TEMAS_PARA_REUNIAO:
      return isSetTemasParaReuniao();
    case PUBLICO_ALVO:
      return isSetPublicoAlvo();
    case PRATICAS_TEMAS_PARA_SAUDE_V200:
      return isSetPraticasTemasParaSaudeV200();
    case PARTICIPANTES:
      return isSetParticipantes();
    case TB_CDS_ORIGEM:
      return isSetTbCdsOrigem();
    case CODIGO_IBGE_MUNICIPIO_V200:
      return isSetCodigoIbgeMunicipioV200();
    case CNES_LOCAL_ATIVIDADE:
      return isSetCnesLocalAtividade();
    case PROCEDIMENTO:
      return isSetProcedimento();
    case TURNO:
      return isSetTurno();
    case HEADER_TRANSPORT:
      return isSetHeaderTransport();
    case TEMAS_PARA_SAUDE:
      return isSetTemasParaSaude();
    case PRATICAS_EM_SAUDE:
      return isSetPraticasEmSaude();
    case PSE_EDUCACAO:
      return isSetPseEducacao();
    case PSE_SAUDE:
      return isSetPseSaude();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FichaAtividadeColetivaThrift)
      return this.equals((FichaAtividadeColetivaThrift)that);
    return false;
  }

  public boolean equals(FichaAtividadeColetivaThrift that) {
    if (that == null)
      return false;

    boolean this_present_uuidFicha = true && this.isSetUuidFicha();
    boolean that_present_uuidFicha = true && that.isSetUuidFicha();
    if (this_present_uuidFicha || that_present_uuidFicha) {
      if (!(this_present_uuidFicha && that_present_uuidFicha))
        return false;
      if (!this.uuidFicha.equals(that.uuidFicha))
        return false;
    }

    boolean this_present_dtAtividadeColetivaV200 = true && this.isSetDtAtividadeColetivaV200();
    boolean that_present_dtAtividadeColetivaV200 = true && that.isSetDtAtividadeColetivaV200();
    if (this_present_dtAtividadeColetivaV200 || that_present_dtAtividadeColetivaV200) {
      if (!(this_present_dtAtividadeColetivaV200 && that_present_dtAtividadeColetivaV200))
        return false;
      if (this.dtAtividadeColetivaV200 != that.dtAtividadeColetivaV200)
        return false;
    }

    boolean this_present_numParticipantesProgramadosV200 = true && this.isSetNumParticipantesProgramadosV200();
    boolean that_present_numParticipantesProgramadosV200 = true && that.isSetNumParticipantesProgramadosV200();
    if (this_present_numParticipantesProgramadosV200 || that_present_numParticipantesProgramadosV200) {
      if (!(this_present_numParticipantesProgramadosV200 && that_present_numParticipantesProgramadosV200))
        return false;
      if (this.numParticipantesProgramadosV200 != that.numParticipantesProgramadosV200)
        return false;
    }

    boolean this_present_outraLocalidade = true && this.isSetOutraLocalidade();
    boolean that_present_outraLocalidade = true && that.isSetOutraLocalidade();
    if (this_present_outraLocalidade || that_present_outraLocalidade) {
      if (!(this_present_outraLocalidade && that_present_outraLocalidade))
        return false;
      if (!this.outraLocalidade.equals(that.outraLocalidade))
        return false;
    }

    boolean this_present_horaInicioV200 = true && this.isSetHoraInicioV200();
    boolean that_present_horaInicioV200 = true && that.isSetHoraInicioV200();
    if (this_present_horaInicioV200 || that_present_horaInicioV200) {
      if (!(this_present_horaInicioV200 && that_present_horaInicioV200))
        return false;
      if (this.horaInicioV200 != that.horaInicioV200)
        return false;
    }

    boolean this_present_horaFimV200 = true && this.isSetHoraFimV200();
    boolean that_present_horaFimV200 = true && that.isSetHoraFimV200();
    if (this_present_horaFimV200 || that_present_horaFimV200) {
      if (!(this_present_horaFimV200 && that_present_horaFimV200))
        return false;
      if (this.horaFimV200 != that.horaFimV200)
        return false;
    }

    boolean this_present_inep = true && this.isSetInep();
    boolean that_present_inep = true && that.isSetInep();
    if (this_present_inep || that_present_inep) {
      if (!(this_present_inep && that_present_inep))
        return false;
      if (this.inep != that.inep)
        return false;
    }

    boolean this_present_responsavelCnsV200 = true && this.isSetResponsavelCnsV200();
    boolean that_present_responsavelCnsV200 = true && that.isSetResponsavelCnsV200();
    if (this_present_responsavelCnsV200 || that_present_responsavelCnsV200) {
      if (!(this_present_responsavelCnsV200 && that_present_responsavelCnsV200))
        return false;
      if (!this.responsavelCnsV200.equals(that.responsavelCnsV200))
        return false;
    }

    boolean this_present_responsavelCnesUnidadeV200 = true && this.isSetResponsavelCnesUnidadeV200();
    boolean that_present_responsavelCnesUnidadeV200 = true && that.isSetResponsavelCnesUnidadeV200();
    if (this_present_responsavelCnesUnidadeV200 || that_present_responsavelCnesUnidadeV200) {
      if (!(this_present_responsavelCnesUnidadeV200 && that_present_responsavelCnesUnidadeV200))
        return false;
      if (!this.responsavelCnesUnidadeV200.equals(that.responsavelCnesUnidadeV200))
        return false;
    }

    boolean this_present_responsavelNumIneV200 = true && this.isSetResponsavelNumIneV200();
    boolean that_present_responsavelNumIneV200 = true && that.isSetResponsavelNumIneV200();
    if (this_present_responsavelNumIneV200 || that_present_responsavelNumIneV200) {
      if (!(this_present_responsavelNumIneV200 && that_present_responsavelNumIneV200))
        return false;
      if (!this.responsavelNumIneV200.equals(that.responsavelNumIneV200))
        return false;
    }

    boolean this_present_numParticipantes = true && this.isSetNumParticipantes();
    boolean that_present_numParticipantes = true && that.isSetNumParticipantes();
    if (this_present_numParticipantes || that_present_numParticipantes) {
      if (!(this_present_numParticipantes && that_present_numParticipantes))
        return false;
      if (this.numParticipantes != that.numParticipantes)
        return false;
    }

    boolean this_present_numAvaliacoesAlteradas = true && this.isSetNumAvaliacoesAlteradas();
    boolean that_present_numAvaliacoesAlteradas = true && that.isSetNumAvaliacoesAlteradas();
    if (this_present_numAvaliacoesAlteradas || that_present_numAvaliacoesAlteradas) {
      if (!(this_present_numAvaliacoesAlteradas && that_present_numAvaliacoesAlteradas))
        return false;
      if (this.numAvaliacoesAlteradas != that.numAvaliacoesAlteradas)
        return false;
    }

    boolean this_present_profissionais = true && this.isSetProfissionais();
    boolean that_present_profissionais = true && that.isSetProfissionais();
    if (this_present_profissionais || that_present_profissionais) {
      if (!(this_present_profissionais && that_present_profissionais))
        return false;
      if (!this.profissionais.equals(that.profissionais))
        return false;
    }

    boolean this_present_atividadeTipo = true && this.isSetAtividadeTipo();
    boolean that_present_atividadeTipo = true && that.isSetAtividadeTipo();
    if (this_present_atividadeTipo || that_present_atividadeTipo) {
      if (!(this_present_atividadeTipo && that_present_atividadeTipo))
        return false;
      if (this.atividadeTipo != that.atividadeTipo)
        return false;
    }

    boolean this_present_temasParaReuniao = true && this.isSetTemasParaReuniao();
    boolean that_present_temasParaReuniao = true && that.isSetTemasParaReuniao();
    if (this_present_temasParaReuniao || that_present_temasParaReuniao) {
      if (!(this_present_temasParaReuniao && that_present_temasParaReuniao))
        return false;
      if (!this.temasParaReuniao.equals(that.temasParaReuniao))
        return false;
    }

    boolean this_present_publicoAlvo = true && this.isSetPublicoAlvo();
    boolean that_present_publicoAlvo = true && that.isSetPublicoAlvo();
    if (this_present_publicoAlvo || that_present_publicoAlvo) {
      if (!(this_present_publicoAlvo && that_present_publicoAlvo))
        return false;
      if (!this.publicoAlvo.equals(that.publicoAlvo))
        return false;
    }

    boolean this_present_praticasTemasParaSaudeV200 = true && this.isSetPraticasTemasParaSaudeV200();
    boolean that_present_praticasTemasParaSaudeV200 = true && that.isSetPraticasTemasParaSaudeV200();
    if (this_present_praticasTemasParaSaudeV200 || that_present_praticasTemasParaSaudeV200) {
      if (!(this_present_praticasTemasParaSaudeV200 && that_present_praticasTemasParaSaudeV200))
        return false;
      if (!this.praticasTemasParaSaudeV200.equals(that.praticasTemasParaSaudeV200))
        return false;
    }

    boolean this_present_participantes = true && this.isSetParticipantes();
    boolean that_present_participantes = true && that.isSetParticipantes();
    if (this_present_participantes || that_present_participantes) {
      if (!(this_present_participantes && that_present_participantes))
        return false;
      if (!this.participantes.equals(that.participantes))
        return false;
    }

    boolean this_present_tbCdsOrigem = true && this.isSetTbCdsOrigem();
    boolean that_present_tbCdsOrigem = true && that.isSetTbCdsOrigem();
    if (this_present_tbCdsOrigem || that_present_tbCdsOrigem) {
      if (!(this_present_tbCdsOrigem && that_present_tbCdsOrigem))
        return false;
      if (this.tbCdsOrigem != that.tbCdsOrigem)
        return false;
    }

    boolean this_present_codigoIbgeMunicipioV200 = true && this.isSetCodigoIbgeMunicipioV200();
    boolean that_present_codigoIbgeMunicipioV200 = true && that.isSetCodigoIbgeMunicipioV200();
    if (this_present_codigoIbgeMunicipioV200 || that_present_codigoIbgeMunicipioV200) {
      if (!(this_present_codigoIbgeMunicipioV200 && that_present_codigoIbgeMunicipioV200))
        return false;
      if (!this.codigoIbgeMunicipioV200.equals(that.codigoIbgeMunicipioV200))
        return false;
    }

    boolean this_present_cnesLocalAtividade = true && this.isSetCnesLocalAtividade();
    boolean that_present_cnesLocalAtividade = true && that.isSetCnesLocalAtividade();
    if (this_present_cnesLocalAtividade || that_present_cnesLocalAtividade) {
      if (!(this_present_cnesLocalAtividade && that_present_cnesLocalAtividade))
        return false;
      if (!this.cnesLocalAtividade.equals(that.cnesLocalAtividade))
        return false;
    }

    boolean this_present_procedimento = true && this.isSetProcedimento();
    boolean that_present_procedimento = true && that.isSetProcedimento();
    if (this_present_procedimento || that_present_procedimento) {
      if (!(this_present_procedimento && that_present_procedimento))
        return false;
      if (!this.procedimento.equals(that.procedimento))
        return false;
    }

    boolean this_present_turno = true && this.isSetTurno();
    boolean that_present_turno = true && that.isSetTurno();
    if (this_present_turno || that_present_turno) {
      if (!(this_present_turno && that_present_turno))
        return false;
      if (this.turno != that.turno)
        return false;
    }

    boolean this_present_headerTransport = true && this.isSetHeaderTransport();
    boolean that_present_headerTransport = true && that.isSetHeaderTransport();
    if (this_present_headerTransport || that_present_headerTransport) {
      if (!(this_present_headerTransport && that_present_headerTransport))
        return false;
      if (!this.headerTransport.equals(that.headerTransport))
        return false;
    }

    boolean this_present_temasParaSaude = true && this.isSetTemasParaSaude();
    boolean that_present_temasParaSaude = true && that.isSetTemasParaSaude();
    if (this_present_temasParaSaude || that_present_temasParaSaude) {
      if (!(this_present_temasParaSaude && that_present_temasParaSaude))
        return false;
      if (!this.temasParaSaude.equals(that.temasParaSaude))
        return false;
    }

    boolean this_present_praticasEmSaude = true && this.isSetPraticasEmSaude();
    boolean that_present_praticasEmSaude = true && that.isSetPraticasEmSaude();
    if (this_present_praticasEmSaude || that_present_praticasEmSaude) {
      if (!(this_present_praticasEmSaude && that_present_praticasEmSaude))
        return false;
      if (!this.praticasEmSaude.equals(that.praticasEmSaude))
        return false;
    }

    boolean this_present_pseEducacao = true && this.isSetPseEducacao();
    boolean that_present_pseEducacao = true && that.isSetPseEducacao();
    if (this_present_pseEducacao || that_present_pseEducacao) {
      if (!(this_present_pseEducacao && that_present_pseEducacao))
        return false;
      if (this.pseEducacao != that.pseEducacao)
        return false;
    }

    boolean this_present_pseSaude = true && this.isSetPseSaude();
    boolean that_present_pseSaude = true && that.isSetPseSaude();
    if (this_present_pseSaude || that_present_pseSaude) {
      if (!(this_present_pseSaude && that_present_pseSaude))
        return false;
      if (this.pseSaude != that.pseSaude)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_uuidFicha = true && (isSetUuidFicha());
    list.add(present_uuidFicha);
    if (present_uuidFicha)
      list.add(uuidFicha);

    boolean present_dtAtividadeColetivaV200 = true && (isSetDtAtividadeColetivaV200());
    list.add(present_dtAtividadeColetivaV200);
    if (present_dtAtividadeColetivaV200)
      list.add(dtAtividadeColetivaV200);

    boolean present_numParticipantesProgramadosV200 = true && (isSetNumParticipantesProgramadosV200());
    list.add(present_numParticipantesProgramadosV200);
    if (present_numParticipantesProgramadosV200)
      list.add(numParticipantesProgramadosV200);

    boolean present_outraLocalidade = true && (isSetOutraLocalidade());
    list.add(present_outraLocalidade);
    if (present_outraLocalidade)
      list.add(outraLocalidade);

    boolean present_horaInicioV200 = true && (isSetHoraInicioV200());
    list.add(present_horaInicioV200);
    if (present_horaInicioV200)
      list.add(horaInicioV200);

    boolean present_horaFimV200 = true && (isSetHoraFimV200());
    list.add(present_horaFimV200);
    if (present_horaFimV200)
      list.add(horaFimV200);

    boolean present_inep = true && (isSetInep());
    list.add(present_inep);
    if (present_inep)
      list.add(inep);

    boolean present_responsavelCnsV200 = true && (isSetResponsavelCnsV200());
    list.add(present_responsavelCnsV200);
    if (present_responsavelCnsV200)
      list.add(responsavelCnsV200);

    boolean present_responsavelCnesUnidadeV200 = true && (isSetResponsavelCnesUnidadeV200());
    list.add(present_responsavelCnesUnidadeV200);
    if (present_responsavelCnesUnidadeV200)
      list.add(responsavelCnesUnidadeV200);

    boolean present_responsavelNumIneV200 = true && (isSetResponsavelNumIneV200());
    list.add(present_responsavelNumIneV200);
    if (present_responsavelNumIneV200)
      list.add(responsavelNumIneV200);

    boolean present_numParticipantes = true && (isSetNumParticipantes());
    list.add(present_numParticipantes);
    if (present_numParticipantes)
      list.add(numParticipantes);

    boolean present_numAvaliacoesAlteradas = true && (isSetNumAvaliacoesAlteradas());
    list.add(present_numAvaliacoesAlteradas);
    if (present_numAvaliacoesAlteradas)
      list.add(numAvaliacoesAlteradas);

    boolean present_profissionais = true && (isSetProfissionais());
    list.add(present_profissionais);
    if (present_profissionais)
      list.add(profissionais);

    boolean present_atividadeTipo = true && (isSetAtividadeTipo());
    list.add(present_atividadeTipo);
    if (present_atividadeTipo)
      list.add(atividadeTipo);

    boolean present_temasParaReuniao = true && (isSetTemasParaReuniao());
    list.add(present_temasParaReuniao);
    if (present_temasParaReuniao)
      list.add(temasParaReuniao);

    boolean present_publicoAlvo = true && (isSetPublicoAlvo());
    list.add(present_publicoAlvo);
    if (present_publicoAlvo)
      list.add(publicoAlvo);

    boolean present_praticasTemasParaSaudeV200 = true && (isSetPraticasTemasParaSaudeV200());
    list.add(present_praticasTemasParaSaudeV200);
    if (present_praticasTemasParaSaudeV200)
      list.add(praticasTemasParaSaudeV200);

    boolean present_participantes = true && (isSetParticipantes());
    list.add(present_participantes);
    if (present_participantes)
      list.add(participantes);

    boolean present_tbCdsOrigem = true && (isSetTbCdsOrigem());
    list.add(present_tbCdsOrigem);
    if (present_tbCdsOrigem)
      list.add(tbCdsOrigem);

    boolean present_codigoIbgeMunicipioV200 = true && (isSetCodigoIbgeMunicipioV200());
    list.add(present_codigoIbgeMunicipioV200);
    if (present_codigoIbgeMunicipioV200)
      list.add(codigoIbgeMunicipioV200);

    boolean present_cnesLocalAtividade = true && (isSetCnesLocalAtividade());
    list.add(present_cnesLocalAtividade);
    if (present_cnesLocalAtividade)
      list.add(cnesLocalAtividade);

    boolean present_procedimento = true && (isSetProcedimento());
    list.add(present_procedimento);
    if (present_procedimento)
      list.add(procedimento);

    boolean present_turno = true && (isSetTurno());
    list.add(present_turno);
    if (present_turno)
      list.add(turno);

    boolean present_headerTransport = true && (isSetHeaderTransport());
    list.add(present_headerTransport);
    if (present_headerTransport)
      list.add(headerTransport);

    boolean present_temasParaSaude = true && (isSetTemasParaSaude());
    list.add(present_temasParaSaude);
    if (present_temasParaSaude)
      list.add(temasParaSaude);

    boolean present_praticasEmSaude = true && (isSetPraticasEmSaude());
    list.add(present_praticasEmSaude);
    if (present_praticasEmSaude)
      list.add(praticasEmSaude);

    boolean present_pseEducacao = true && (isSetPseEducacao());
    list.add(present_pseEducacao);
    if (present_pseEducacao)
      list.add(pseEducacao);

    boolean present_pseSaude = true && (isSetPseSaude());
    list.add(present_pseSaude);
    if (present_pseSaude)
      list.add(pseSaude);

    return list.hashCode();
  }

  @Override
  public int compareTo(FichaAtividadeColetivaThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUuidFicha()).compareTo(other.isSetUuidFicha());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidFicha()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidFicha, other.uuidFicha);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDtAtividadeColetivaV200()).compareTo(other.isSetDtAtividadeColetivaV200());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDtAtividadeColetivaV200()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dtAtividadeColetivaV200, other.dtAtividadeColetivaV200);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumParticipantesProgramadosV200()).compareTo(other.isSetNumParticipantesProgramadosV200());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumParticipantesProgramadosV200()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numParticipantesProgramadosV200, other.numParticipantesProgramadosV200);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutraLocalidade()).compareTo(other.isSetOutraLocalidade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutraLocalidade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outraLocalidade, other.outraLocalidade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHoraInicioV200()).compareTo(other.isSetHoraInicioV200());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHoraInicioV200()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.horaInicioV200, other.horaInicioV200);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHoraFimV200()).compareTo(other.isSetHoraFimV200());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHoraFimV200()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.horaFimV200, other.horaFimV200);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInep()).compareTo(other.isSetInep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inep, other.inep);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResponsavelCnsV200()).compareTo(other.isSetResponsavelCnsV200());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponsavelCnsV200()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responsavelCnsV200, other.responsavelCnsV200);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResponsavelCnesUnidadeV200()).compareTo(other.isSetResponsavelCnesUnidadeV200());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponsavelCnesUnidadeV200()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responsavelCnesUnidadeV200, other.responsavelCnesUnidadeV200);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResponsavelNumIneV200()).compareTo(other.isSetResponsavelNumIneV200());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponsavelNumIneV200()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responsavelNumIneV200, other.responsavelNumIneV200);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumParticipantes()).compareTo(other.isSetNumParticipantes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumParticipantes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numParticipantes, other.numParticipantes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumAvaliacoesAlteradas()).compareTo(other.isSetNumAvaliacoesAlteradas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumAvaliacoesAlteradas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numAvaliacoesAlteradas, other.numAvaliacoesAlteradas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfissionais()).compareTo(other.isSetProfissionais());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfissionais()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profissionais, other.profissionais);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAtividadeTipo()).compareTo(other.isSetAtividadeTipo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAtividadeTipo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atividadeTipo, other.atividadeTipo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTemasParaReuniao()).compareTo(other.isSetTemasParaReuniao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTemasParaReuniao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.temasParaReuniao, other.temasParaReuniao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPublicoAlvo()).compareTo(other.isSetPublicoAlvo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublicoAlvo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publicoAlvo, other.publicoAlvo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPraticasTemasParaSaudeV200()).compareTo(other.isSetPraticasTemasParaSaudeV200());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPraticasTemasParaSaudeV200()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.praticasTemasParaSaudeV200, other.praticasTemasParaSaudeV200);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParticipantes()).compareTo(other.isSetParticipantes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParticipantes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.participantes, other.participantes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTbCdsOrigem()).compareTo(other.isSetTbCdsOrigem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTbCdsOrigem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tbCdsOrigem, other.tbCdsOrigem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCodigoIbgeMunicipioV200()).compareTo(other.isSetCodigoIbgeMunicipioV200());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCodigoIbgeMunicipioV200()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codigoIbgeMunicipioV200, other.codigoIbgeMunicipioV200);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCnesLocalAtividade()).compareTo(other.isSetCnesLocalAtividade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCnesLocalAtividade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cnesLocalAtividade, other.cnesLocalAtividade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProcedimento()).compareTo(other.isSetProcedimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProcedimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.procedimento, other.procedimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTurno()).compareTo(other.isSetTurno());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTurno()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.turno, other.turno);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHeaderTransport()).compareTo(other.isSetHeaderTransport());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeaderTransport()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.headerTransport, other.headerTransport);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTemasParaSaude()).compareTo(other.isSetTemasParaSaude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTemasParaSaude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.temasParaSaude, other.temasParaSaude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPraticasEmSaude()).compareTo(other.isSetPraticasEmSaude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPraticasEmSaude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.praticasEmSaude, other.praticasEmSaude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPseEducacao()).compareTo(other.isSetPseEducacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPseEducacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pseEducacao, other.pseEducacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPseSaude()).compareTo(other.isSetPseSaude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPseSaude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pseSaude, other.pseSaude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FichaAtividadeColetivaThrift(");
    boolean first = true;

    sb.append("uuidFicha:");
    if (this.uuidFicha == null) {
      sb.append("null");
    } else {
      sb.append(this.uuidFicha);
    }
    first = false;
    if (isSetDtAtividadeColetivaV200()) {
      if (!first) sb.append(", ");
      sb.append("dtAtividadeColetivaV200:");
      sb.append(this.dtAtividadeColetivaV200);
      first = false;
    }
    if (isSetNumParticipantesProgramadosV200()) {
      if (!first) sb.append(", ");
      sb.append("numParticipantesProgramadosV200:");
      sb.append(this.numParticipantesProgramadosV200);
      first = false;
    }
    if (isSetOutraLocalidade()) {
      if (!first) sb.append(", ");
      sb.append("outraLocalidade:");
      if (this.outraLocalidade == null) {
        sb.append("null");
      } else {
        sb.append(this.outraLocalidade);
      }
      first = false;
    }
    if (isSetHoraInicioV200()) {
      if (!first) sb.append(", ");
      sb.append("horaInicioV200:");
      sb.append(this.horaInicioV200);
      first = false;
    }
    if (isSetHoraFimV200()) {
      if (!first) sb.append(", ");
      sb.append("horaFimV200:");
      sb.append(this.horaFimV200);
      first = false;
    }
    if (isSetInep()) {
      if (!first) sb.append(", ");
      sb.append("inep:");
      sb.append(this.inep);
      first = false;
    }
    if (isSetResponsavelCnsV200()) {
      if (!first) sb.append(", ");
      sb.append("responsavelCnsV200:");
      if (this.responsavelCnsV200 == null) {
        sb.append("null");
      } else {
        sb.append(this.responsavelCnsV200);
      }
      first = false;
    }
    if (isSetResponsavelCnesUnidadeV200()) {
      if (!first) sb.append(", ");
      sb.append("responsavelCnesUnidadeV200:");
      if (this.responsavelCnesUnidadeV200 == null) {
        sb.append("null");
      } else {
        sb.append(this.responsavelCnesUnidadeV200);
      }
      first = false;
    }
    if (isSetResponsavelNumIneV200()) {
      if (!first) sb.append(", ");
      sb.append("responsavelNumIneV200:");
      if (this.responsavelNumIneV200 == null) {
        sb.append("null");
      } else {
        sb.append(this.responsavelNumIneV200);
      }
      first = false;
    }
    if (isSetNumParticipantes()) {
      if (!first) sb.append(", ");
      sb.append("numParticipantes:");
      sb.append(this.numParticipantes);
      first = false;
    }
    if (isSetNumAvaliacoesAlteradas()) {
      if (!first) sb.append(", ");
      sb.append("numAvaliacoesAlteradas:");
      sb.append(this.numAvaliacoesAlteradas);
      first = false;
    }
    if (isSetProfissionais()) {
      if (!first) sb.append(", ");
      sb.append("profissionais:");
      if (this.profissionais == null) {
        sb.append("null");
      } else {
        sb.append(this.profissionais);
      }
      first = false;
    }
    if (isSetAtividadeTipo()) {
      if (!first) sb.append(", ");
      sb.append("atividadeTipo:");
      sb.append(this.atividadeTipo);
      first = false;
    }
    if (isSetTemasParaReuniao()) {
      if (!first) sb.append(", ");
      sb.append("temasParaReuniao:");
      if (this.temasParaReuniao == null) {
        sb.append("null");
      } else {
        sb.append(this.temasParaReuniao);
      }
      first = false;
    }
    if (isSetPublicoAlvo()) {
      if (!first) sb.append(", ");
      sb.append("publicoAlvo:");
      if (this.publicoAlvo == null) {
        sb.append("null");
      } else {
        sb.append(this.publicoAlvo);
      }
      first = false;
    }
    if (isSetPraticasTemasParaSaudeV200()) {
      if (!first) sb.append(", ");
      sb.append("praticasTemasParaSaudeV200:");
      if (this.praticasTemasParaSaudeV200 == null) {
        sb.append("null");
      } else {
        sb.append(this.praticasTemasParaSaudeV200);
      }
      first = false;
    }
    if (isSetParticipantes()) {
      if (!first) sb.append(", ");
      sb.append("participantes:");
      if (this.participantes == null) {
        sb.append("null");
      } else {
        sb.append(this.participantes);
      }
      first = false;
    }
    if (isSetTbCdsOrigem()) {
      if (!first) sb.append(", ");
      sb.append("tbCdsOrigem:");
      sb.append(this.tbCdsOrigem);
      first = false;
    }
    if (isSetCodigoIbgeMunicipioV200()) {
      if (!first) sb.append(", ");
      sb.append("codigoIbgeMunicipioV200:");
      if (this.codigoIbgeMunicipioV200 == null) {
        sb.append("null");
      } else {
        sb.append(this.codigoIbgeMunicipioV200);
      }
      first = false;
    }
    if (isSetCnesLocalAtividade()) {
      if (!first) sb.append(", ");
      sb.append("cnesLocalAtividade:");
      if (this.cnesLocalAtividade == null) {
        sb.append("null");
      } else {
        sb.append(this.cnesLocalAtividade);
      }
      first = false;
    }
    if (isSetProcedimento()) {
      if (!first) sb.append(", ");
      sb.append("procedimento:");
      if (this.procedimento == null) {
        sb.append("null");
      } else {
        sb.append(this.procedimento);
      }
      first = false;
    }
    if (isSetTurno()) {
      if (!first) sb.append(", ");
      sb.append("turno:");
      sb.append(this.turno);
      first = false;
    }
    if (isSetHeaderTransport()) {
      if (!first) sb.append(", ");
      sb.append("headerTransport:");
      if (this.headerTransport == null) {
        sb.append("null");
      } else {
        sb.append(this.headerTransport);
      }
      first = false;
    }
    if (isSetTemasParaSaude()) {
      if (!first) sb.append(", ");
      sb.append("temasParaSaude:");
      if (this.temasParaSaude == null) {
        sb.append("null");
      } else {
        sb.append(this.temasParaSaude);
      }
      first = false;
    }
    if (isSetPraticasEmSaude()) {
      if (!first) sb.append(", ");
      sb.append("praticasEmSaude:");
      if (this.praticasEmSaude == null) {
        sb.append("null");
      } else {
        sb.append(this.praticasEmSaude);
      }
      first = false;
    }
    if (isSetPseEducacao()) {
      if (!first) sb.append(", ");
      sb.append("pseEducacao:");
      sb.append(this.pseEducacao);
      first = false;
    }
    if (isSetPseSaude()) {
      if (!first) sb.append(", ");
      sb.append("pseSaude:");
      sb.append(this.pseSaude);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetUuidFicha()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'uuidFicha' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (headerTransport != null) {
      headerTransport.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FichaAtividadeColetivaThriftStandardSchemeFactory implements SchemeFactory {
    public FichaAtividadeColetivaThriftStandardScheme getScheme() {
      return new FichaAtividadeColetivaThriftStandardScheme();
    }
  }

  private static class FichaAtividadeColetivaThriftStandardScheme extends StandardScheme<FichaAtividadeColetivaThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FichaAtividadeColetivaThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // UUID_FICHA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidFicha = iprot.readString();
              struct.setUuidFichaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DT_ATIVIDADE_COLETIVA_V200
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dtAtividadeColetivaV200 = iprot.readI64();
              struct.setDtAtividadeColetivaV200IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NUM_PARTICIPANTES_PROGRAMADOS_V200
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.numParticipantesProgramadosV200 = iprot.readI32();
              struct.setNumParticipantesProgramadosV200IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // OUTRA_LOCALIDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outraLocalidade = iprot.readString();
              struct.setOutraLocalidadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // HORA_INICIO_V200
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.horaInicioV200 = iprot.readI64();
              struct.setHoraInicioV200IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // HORA_FIM_V200
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.horaFimV200 = iprot.readI64();
              struct.setHoraFimV200IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // INEP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.inep = iprot.readI64();
              struct.setInepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RESPONSAVEL_CNS_V200
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.responsavelCnsV200 = iprot.readString();
              struct.setResponsavelCnsV200IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // RESPONSAVEL_CNES_UNIDADE_V200
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.responsavelCnesUnidadeV200 = iprot.readString();
              struct.setResponsavelCnesUnidadeV200IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // RESPONSAVEL_NUM_INE_V200
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.responsavelNumIneV200 = iprot.readString();
              struct.setResponsavelNumIneV200IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // NUM_PARTICIPANTES
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.numParticipantes = iprot.readI32();
              struct.setNumParticipantesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // NUM_AVALIACOES_ALTERADAS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.numAvaliacoesAlteradas = iprot.readI32();
              struct.setNumAvaliacoesAlteradasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PROFISSIONAIS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.profissionais = new ArrayList<ProfissionalCboRowItemThrift>(_list0.size);
                ProfissionalCboRowItemThrift _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new ProfissionalCboRowItemThrift();
                  _elem1.read(iprot);
                  struct.profissionais.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setProfissionaisIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ATIVIDADE_TIPO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.atividadeTipo = iprot.readI64();
              struct.setAtividadeTipoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // TEMAS_PARA_REUNIAO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.temasParaReuniao = new ArrayList<Long>(_list3.size);
                long _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = iprot.readI64();
                  struct.temasParaReuniao.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setTemasParaReuniaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PUBLICO_ALVO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list6 = iprot.readListBegin();
                struct.publicoAlvo = new ArrayList<Long>(_list6.size);
                long _elem7;
                for (int _i8 = 0; _i8 < _list6.size; ++_i8)
                {
                  _elem7 = iprot.readI64();
                  struct.publicoAlvo.add(_elem7);
                }
                iprot.readListEnd();
              }
              struct.setPublicoAlvoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // PRATICAS_TEMAS_PARA_SAUDE_V200
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list9 = iprot.readListBegin();
                struct.praticasTemasParaSaudeV200 = new ArrayList<Long>(_list9.size);
                long _elem10;
                for (int _i11 = 0; _i11 < _list9.size; ++_i11)
                {
                  _elem10 = iprot.readI64();
                  struct.praticasTemasParaSaudeV200.add(_elem10);
                }
                iprot.readListEnd();
              }
              struct.setPraticasTemasParaSaudeV200IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // PARTICIPANTES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list12 = iprot.readListBegin();
                struct.participantes = new ArrayList<ParticipanteRowItemThrift>(_list12.size);
                ParticipanteRowItemThrift _elem13;
                for (int _i14 = 0; _i14 < _list12.size; ++_i14)
                {
                  _elem13 = new ParticipanteRowItemThrift();
                  _elem13.read(iprot);
                  struct.participantes.add(_elem13);
                }
                iprot.readListEnd();
              }
              struct.setParticipantesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // TB_CDS_ORIGEM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.tbCdsOrigem = iprot.readI32();
              struct.setTbCdsOrigemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CODIGO_IBGE_MUNICIPIO_V200
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.codigoIbgeMunicipioV200 = iprot.readString();
              struct.setCodigoIbgeMunicipioV200IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // CNES_LOCAL_ATIVIDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cnesLocalAtividade = iprot.readString();
              struct.setCnesLocalAtividadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // PROCEDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.procedimento = iprot.readString();
              struct.setProcedimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // TURNO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.turno = iprot.readI64();
              struct.setTurnoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // HEADER_TRANSPORT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.headerTransport = new br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift();
              struct.headerTransport.read(iprot);
              struct.setHeaderTransportIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // TEMAS_PARA_SAUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list15 = iprot.readListBegin();
                struct.temasParaSaude = new ArrayList<Long>(_list15.size);
                long _elem16;
                for (int _i17 = 0; _i17 < _list15.size; ++_i17)
                {
                  _elem16 = iprot.readI64();
                  struct.temasParaSaude.add(_elem16);
                }
                iprot.readListEnd();
              }
              struct.setTemasParaSaudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // PRATICAS_EM_SAUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list18 = iprot.readListBegin();
                struct.praticasEmSaude = new ArrayList<Long>(_list18.size);
                long _elem19;
                for (int _i20 = 0; _i20 < _list18.size; ++_i20)
                {
                  _elem19 = iprot.readI64();
                  struct.praticasEmSaude.add(_elem19);
                }
                iprot.readListEnd();
              }
              struct.setPraticasEmSaudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // PSE_EDUCACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.pseEducacao = iprot.readBool();
              struct.setPseEducacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // PSE_SAUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.pseSaude = iprot.readBool();
              struct.setPseSaudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FichaAtividadeColetivaThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.uuidFicha != null) {
        oprot.writeFieldBegin(UUID_FICHA_FIELD_DESC);
        oprot.writeString(struct.uuidFicha);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDtAtividadeColetivaV200()) {
        oprot.writeFieldBegin(DT_ATIVIDADE_COLETIVA_V200_FIELD_DESC);
        oprot.writeI64(struct.dtAtividadeColetivaV200);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNumParticipantesProgramadosV200()) {
        oprot.writeFieldBegin(NUM_PARTICIPANTES_PROGRAMADOS_V200_FIELD_DESC);
        oprot.writeI32(struct.numParticipantesProgramadosV200);
        oprot.writeFieldEnd();
      }
      if (struct.outraLocalidade != null) {
        if (struct.isSetOutraLocalidade()) {
          oprot.writeFieldBegin(OUTRA_LOCALIDADE_FIELD_DESC);
          oprot.writeString(struct.outraLocalidade);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetHoraInicioV200()) {
        oprot.writeFieldBegin(HORA_INICIO_V200_FIELD_DESC);
        oprot.writeI64(struct.horaInicioV200);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHoraFimV200()) {
        oprot.writeFieldBegin(HORA_FIM_V200_FIELD_DESC);
        oprot.writeI64(struct.horaFimV200);
        oprot.writeFieldEnd();
      }
      if (struct.isSetInep()) {
        oprot.writeFieldBegin(INEP_FIELD_DESC);
        oprot.writeI64(struct.inep);
        oprot.writeFieldEnd();
      }
      if (struct.responsavelCnsV200 != null) {
        if (struct.isSetResponsavelCnsV200()) {
          oprot.writeFieldBegin(RESPONSAVEL_CNS_V200_FIELD_DESC);
          oprot.writeString(struct.responsavelCnsV200);
          oprot.writeFieldEnd();
        }
      }
      if (struct.responsavelCnesUnidadeV200 != null) {
        if (struct.isSetResponsavelCnesUnidadeV200()) {
          oprot.writeFieldBegin(RESPONSAVEL_CNES_UNIDADE_V200_FIELD_DESC);
          oprot.writeString(struct.responsavelCnesUnidadeV200);
          oprot.writeFieldEnd();
        }
      }
      if (struct.responsavelNumIneV200 != null) {
        if (struct.isSetResponsavelNumIneV200()) {
          oprot.writeFieldBegin(RESPONSAVEL_NUM_INE_V200_FIELD_DESC);
          oprot.writeString(struct.responsavelNumIneV200);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetNumParticipantes()) {
        oprot.writeFieldBegin(NUM_PARTICIPANTES_FIELD_DESC);
        oprot.writeI32(struct.numParticipantes);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNumAvaliacoesAlteradas()) {
        oprot.writeFieldBegin(NUM_AVALIACOES_ALTERADAS_FIELD_DESC);
        oprot.writeI32(struct.numAvaliacoesAlteradas);
        oprot.writeFieldEnd();
      }
      if (struct.profissionais != null) {
        if (struct.isSetProfissionais()) {
          oprot.writeFieldBegin(PROFISSIONAIS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.profissionais.size()));
            for (ProfissionalCboRowItemThrift _iter21 : struct.profissionais)
            {
              _iter21.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAtividadeTipo()) {
        oprot.writeFieldBegin(ATIVIDADE_TIPO_FIELD_DESC);
        oprot.writeI64(struct.atividadeTipo);
        oprot.writeFieldEnd();
      }
      if (struct.temasParaReuniao != null) {
        if (struct.isSetTemasParaReuniao()) {
          oprot.writeFieldBegin(TEMAS_PARA_REUNIAO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.temasParaReuniao.size()));
            for (long _iter22 : struct.temasParaReuniao)
            {
              oprot.writeI64(_iter22);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.publicoAlvo != null) {
        if (struct.isSetPublicoAlvo()) {
          oprot.writeFieldBegin(PUBLICO_ALVO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.publicoAlvo.size()));
            for (long _iter23 : struct.publicoAlvo)
            {
              oprot.writeI64(_iter23);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.praticasTemasParaSaudeV200 != null) {
        if (struct.isSetPraticasTemasParaSaudeV200()) {
          oprot.writeFieldBegin(PRATICAS_TEMAS_PARA_SAUDE_V200_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.praticasTemasParaSaudeV200.size()));
            for (long _iter24 : struct.praticasTemasParaSaudeV200)
            {
              oprot.writeI64(_iter24);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.participantes != null) {
        if (struct.isSetParticipantes()) {
          oprot.writeFieldBegin(PARTICIPANTES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.participantes.size()));
            for (ParticipanteRowItemThrift _iter25 : struct.participantes)
            {
              _iter25.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTbCdsOrigem()) {
        oprot.writeFieldBegin(TB_CDS_ORIGEM_FIELD_DESC);
        oprot.writeI32(struct.tbCdsOrigem);
        oprot.writeFieldEnd();
      }
      if (struct.codigoIbgeMunicipioV200 != null) {
        if (struct.isSetCodigoIbgeMunicipioV200()) {
          oprot.writeFieldBegin(CODIGO_IBGE_MUNICIPIO_V200_FIELD_DESC);
          oprot.writeString(struct.codigoIbgeMunicipioV200);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cnesLocalAtividade != null) {
        if (struct.isSetCnesLocalAtividade()) {
          oprot.writeFieldBegin(CNES_LOCAL_ATIVIDADE_FIELD_DESC);
          oprot.writeString(struct.cnesLocalAtividade);
          oprot.writeFieldEnd();
        }
      }
      if (struct.procedimento != null) {
        if (struct.isSetProcedimento()) {
          oprot.writeFieldBegin(PROCEDIMENTO_FIELD_DESC);
          oprot.writeString(struct.procedimento);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTurno()) {
        oprot.writeFieldBegin(TURNO_FIELD_DESC);
        oprot.writeI64(struct.turno);
        oprot.writeFieldEnd();
      }
      if (struct.headerTransport != null) {
        if (struct.isSetHeaderTransport()) {
          oprot.writeFieldBegin(HEADER_TRANSPORT_FIELD_DESC);
          struct.headerTransport.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.temasParaSaude != null) {
        if (struct.isSetTemasParaSaude()) {
          oprot.writeFieldBegin(TEMAS_PARA_SAUDE_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.temasParaSaude.size()));
            for (long _iter26 : struct.temasParaSaude)
            {
              oprot.writeI64(_iter26);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.praticasEmSaude != null) {
        if (struct.isSetPraticasEmSaude()) {
          oprot.writeFieldBegin(PRATICAS_EM_SAUDE_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.praticasEmSaude.size()));
            for (long _iter27 : struct.praticasEmSaude)
            {
              oprot.writeI64(_iter27);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPseEducacao()) {
        oprot.writeFieldBegin(PSE_EDUCACAO_FIELD_DESC);
        oprot.writeBool(struct.pseEducacao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPseSaude()) {
        oprot.writeFieldBegin(PSE_SAUDE_FIELD_DESC);
        oprot.writeBool(struct.pseSaude);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FichaAtividadeColetivaThriftTupleSchemeFactory implements SchemeFactory {
    public FichaAtividadeColetivaThriftTupleScheme getScheme() {
      return new FichaAtividadeColetivaThriftTupleScheme();
    }
  }

  private static class FichaAtividadeColetivaThriftTupleScheme extends TupleScheme<FichaAtividadeColetivaThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FichaAtividadeColetivaThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.uuidFicha);
      BitSet optionals = new BitSet();
      if (struct.isSetDtAtividadeColetivaV200()) {
        optionals.set(0);
      }
      if (struct.isSetNumParticipantesProgramadosV200()) {
        optionals.set(1);
      }
      if (struct.isSetOutraLocalidade()) {
        optionals.set(2);
      }
      if (struct.isSetHoraInicioV200()) {
        optionals.set(3);
      }
      if (struct.isSetHoraFimV200()) {
        optionals.set(4);
      }
      if (struct.isSetInep()) {
        optionals.set(5);
      }
      if (struct.isSetResponsavelCnsV200()) {
        optionals.set(6);
      }
      if (struct.isSetResponsavelCnesUnidadeV200()) {
        optionals.set(7);
      }
      if (struct.isSetResponsavelNumIneV200()) {
        optionals.set(8);
      }
      if (struct.isSetNumParticipantes()) {
        optionals.set(9);
      }
      if (struct.isSetNumAvaliacoesAlteradas()) {
        optionals.set(10);
      }
      if (struct.isSetProfissionais()) {
        optionals.set(11);
      }
      if (struct.isSetAtividadeTipo()) {
        optionals.set(12);
      }
      if (struct.isSetTemasParaReuniao()) {
        optionals.set(13);
      }
      if (struct.isSetPublicoAlvo()) {
        optionals.set(14);
      }
      if (struct.isSetPraticasTemasParaSaudeV200()) {
        optionals.set(15);
      }
      if (struct.isSetParticipantes()) {
        optionals.set(16);
      }
      if (struct.isSetTbCdsOrigem()) {
        optionals.set(17);
      }
      if (struct.isSetCodigoIbgeMunicipioV200()) {
        optionals.set(18);
      }
      if (struct.isSetCnesLocalAtividade()) {
        optionals.set(19);
      }
      if (struct.isSetProcedimento()) {
        optionals.set(20);
      }
      if (struct.isSetTurno()) {
        optionals.set(21);
      }
      if (struct.isSetHeaderTransport()) {
        optionals.set(22);
      }
      if (struct.isSetTemasParaSaude()) {
        optionals.set(23);
      }
      if (struct.isSetPraticasEmSaude()) {
        optionals.set(24);
      }
      if (struct.isSetPseEducacao()) {
        optionals.set(25);
      }
      if (struct.isSetPseSaude()) {
        optionals.set(26);
      }
      oprot.writeBitSet(optionals, 27);
      if (struct.isSetDtAtividadeColetivaV200()) {
        oprot.writeI64(struct.dtAtividadeColetivaV200);
      }
      if (struct.isSetNumParticipantesProgramadosV200()) {
        oprot.writeI32(struct.numParticipantesProgramadosV200);
      }
      if (struct.isSetOutraLocalidade()) {
        oprot.writeString(struct.outraLocalidade);
      }
      if (struct.isSetHoraInicioV200()) {
        oprot.writeI64(struct.horaInicioV200);
      }
      if (struct.isSetHoraFimV200()) {
        oprot.writeI64(struct.horaFimV200);
      }
      if (struct.isSetInep()) {
        oprot.writeI64(struct.inep);
      }
      if (struct.isSetResponsavelCnsV200()) {
        oprot.writeString(struct.responsavelCnsV200);
      }
      if (struct.isSetResponsavelCnesUnidadeV200()) {
        oprot.writeString(struct.responsavelCnesUnidadeV200);
      }
      if (struct.isSetResponsavelNumIneV200()) {
        oprot.writeString(struct.responsavelNumIneV200);
      }
      if (struct.isSetNumParticipantes()) {
        oprot.writeI32(struct.numParticipantes);
      }
      if (struct.isSetNumAvaliacoesAlteradas()) {
        oprot.writeI32(struct.numAvaliacoesAlteradas);
      }
      if (struct.isSetProfissionais()) {
        {
          oprot.writeI32(struct.profissionais.size());
          for (ProfissionalCboRowItemThrift _iter28 : struct.profissionais)
          {
            _iter28.write(oprot);
          }
        }
      }
      if (struct.isSetAtividadeTipo()) {
        oprot.writeI64(struct.atividadeTipo);
      }
      if (struct.isSetTemasParaReuniao()) {
        {
          oprot.writeI32(struct.temasParaReuniao.size());
          for (long _iter29 : struct.temasParaReuniao)
          {
            oprot.writeI64(_iter29);
          }
        }
      }
      if (struct.isSetPublicoAlvo()) {
        {
          oprot.writeI32(struct.publicoAlvo.size());
          for (long _iter30 : struct.publicoAlvo)
          {
            oprot.writeI64(_iter30);
          }
        }
      }
      if (struct.isSetPraticasTemasParaSaudeV200()) {
        {
          oprot.writeI32(struct.praticasTemasParaSaudeV200.size());
          for (long _iter31 : struct.praticasTemasParaSaudeV200)
          {
            oprot.writeI64(_iter31);
          }
        }
      }
      if (struct.isSetParticipantes()) {
        {
          oprot.writeI32(struct.participantes.size());
          for (ParticipanteRowItemThrift _iter32 : struct.participantes)
          {
            _iter32.write(oprot);
          }
        }
      }
      if (struct.isSetTbCdsOrigem()) {
        oprot.writeI32(struct.tbCdsOrigem);
      }
      if (struct.isSetCodigoIbgeMunicipioV200()) {
        oprot.writeString(struct.codigoIbgeMunicipioV200);
      }
      if (struct.isSetCnesLocalAtividade()) {
        oprot.writeString(struct.cnesLocalAtividade);
      }
      if (struct.isSetProcedimento()) {
        oprot.writeString(struct.procedimento);
      }
      if (struct.isSetTurno()) {
        oprot.writeI64(struct.turno);
      }
      if (struct.isSetHeaderTransport()) {
        struct.headerTransport.write(oprot);
      }
      if (struct.isSetTemasParaSaude()) {
        {
          oprot.writeI32(struct.temasParaSaude.size());
          for (long _iter33 : struct.temasParaSaude)
          {
            oprot.writeI64(_iter33);
          }
        }
      }
      if (struct.isSetPraticasEmSaude()) {
        {
          oprot.writeI32(struct.praticasEmSaude.size());
          for (long _iter34 : struct.praticasEmSaude)
          {
            oprot.writeI64(_iter34);
          }
        }
      }
      if (struct.isSetPseEducacao()) {
        oprot.writeBool(struct.pseEducacao);
      }
      if (struct.isSetPseSaude()) {
        oprot.writeBool(struct.pseSaude);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FichaAtividadeColetivaThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.uuidFicha = iprot.readString();
      struct.setUuidFichaIsSet(true);
      BitSet incoming = iprot.readBitSet(27);
      if (incoming.get(0)) {
        struct.dtAtividadeColetivaV200 = iprot.readI64();
        struct.setDtAtividadeColetivaV200IsSet(true);
      }
      if (incoming.get(1)) {
        struct.numParticipantesProgramadosV200 = iprot.readI32();
        struct.setNumParticipantesProgramadosV200IsSet(true);
      }
      if (incoming.get(2)) {
        struct.outraLocalidade = iprot.readString();
        struct.setOutraLocalidadeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.horaInicioV200 = iprot.readI64();
        struct.setHoraInicioV200IsSet(true);
      }
      if (incoming.get(4)) {
        struct.horaFimV200 = iprot.readI64();
        struct.setHoraFimV200IsSet(true);
      }
      if (incoming.get(5)) {
        struct.inep = iprot.readI64();
        struct.setInepIsSet(true);
      }
      if (incoming.get(6)) {
        struct.responsavelCnsV200 = iprot.readString();
        struct.setResponsavelCnsV200IsSet(true);
      }
      if (incoming.get(7)) {
        struct.responsavelCnesUnidadeV200 = iprot.readString();
        struct.setResponsavelCnesUnidadeV200IsSet(true);
      }
      if (incoming.get(8)) {
        struct.responsavelNumIneV200 = iprot.readString();
        struct.setResponsavelNumIneV200IsSet(true);
      }
      if (incoming.get(9)) {
        struct.numParticipantes = iprot.readI32();
        struct.setNumParticipantesIsSet(true);
      }
      if (incoming.get(10)) {
        struct.numAvaliacoesAlteradas = iprot.readI32();
        struct.setNumAvaliacoesAlteradasIsSet(true);
      }
      if (incoming.get(11)) {
        {
          org.apache.thrift.protocol.TList _list35 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.profissionais = new ArrayList<ProfissionalCboRowItemThrift>(_list35.size);
          ProfissionalCboRowItemThrift _elem36;
          for (int _i37 = 0; _i37 < _list35.size; ++_i37)
          {
            _elem36 = new ProfissionalCboRowItemThrift();
            _elem36.read(iprot);
            struct.profissionais.add(_elem36);
          }
        }
        struct.setProfissionaisIsSet(true);
      }
      if (incoming.get(12)) {
        struct.atividadeTipo = iprot.readI64();
        struct.setAtividadeTipoIsSet(true);
      }
      if (incoming.get(13)) {
        {
          org.apache.thrift.protocol.TList _list38 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.temasParaReuniao = new ArrayList<Long>(_list38.size);
          long _elem39;
          for (int _i40 = 0; _i40 < _list38.size; ++_i40)
          {
            _elem39 = iprot.readI64();
            struct.temasParaReuniao.add(_elem39);
          }
        }
        struct.setTemasParaReuniaoIsSet(true);
      }
      if (incoming.get(14)) {
        {
          org.apache.thrift.protocol.TList _list41 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.publicoAlvo = new ArrayList<Long>(_list41.size);
          long _elem42;
          for (int _i43 = 0; _i43 < _list41.size; ++_i43)
          {
            _elem42 = iprot.readI64();
            struct.publicoAlvo.add(_elem42);
          }
        }
        struct.setPublicoAlvoIsSet(true);
      }
      if (incoming.get(15)) {
        {
          org.apache.thrift.protocol.TList _list44 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.praticasTemasParaSaudeV200 = new ArrayList<Long>(_list44.size);
          long _elem45;
          for (int _i46 = 0; _i46 < _list44.size; ++_i46)
          {
            _elem45 = iprot.readI64();
            struct.praticasTemasParaSaudeV200.add(_elem45);
          }
        }
        struct.setPraticasTemasParaSaudeV200IsSet(true);
      }
      if (incoming.get(16)) {
        {
          org.apache.thrift.protocol.TList _list47 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.participantes = new ArrayList<ParticipanteRowItemThrift>(_list47.size);
          ParticipanteRowItemThrift _elem48;
          for (int _i49 = 0; _i49 < _list47.size; ++_i49)
          {
            _elem48 = new ParticipanteRowItemThrift();
            _elem48.read(iprot);
            struct.participantes.add(_elem48);
          }
        }
        struct.setParticipantesIsSet(true);
      }
      if (incoming.get(17)) {
        struct.tbCdsOrigem = iprot.readI32();
        struct.setTbCdsOrigemIsSet(true);
      }
      if (incoming.get(18)) {
        struct.codigoIbgeMunicipioV200 = iprot.readString();
        struct.setCodigoIbgeMunicipioV200IsSet(true);
      }
      if (incoming.get(19)) {
        struct.cnesLocalAtividade = iprot.readString();
        struct.setCnesLocalAtividadeIsSet(true);
      }
      if (incoming.get(20)) {
        struct.procedimento = iprot.readString();
        struct.setProcedimentoIsSet(true);
      }
      if (incoming.get(21)) {
        struct.turno = iprot.readI64();
        struct.setTurnoIsSet(true);
      }
      if (incoming.get(22)) {
        struct.headerTransport = new br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift();
        struct.headerTransport.read(iprot);
        struct.setHeaderTransportIsSet(true);
      }
      if (incoming.get(23)) {
        {
          org.apache.thrift.protocol.TList _list50 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.temasParaSaude = new ArrayList<Long>(_list50.size);
          long _elem51;
          for (int _i52 = 0; _i52 < _list50.size; ++_i52)
          {
            _elem51 = iprot.readI64();
            struct.temasParaSaude.add(_elem51);
          }
        }
        struct.setTemasParaSaudeIsSet(true);
      }
      if (incoming.get(24)) {
        {
          org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.praticasEmSaude = new ArrayList<Long>(_list53.size);
          long _elem54;
          for (int _i55 = 0; _i55 < _list53.size; ++_i55)
          {
            _elem54 = iprot.readI64();
            struct.praticasEmSaude.add(_elem54);
          }
        }
        struct.setPraticasEmSaudeIsSet(true);
      }
      if (incoming.get(25)) {
        struct.pseEducacao = iprot.readBool();
        struct.setPseEducacaoIsSet(true);
      }
      if (incoming.get(26)) {
        struct.pseSaude = iprot.readBool();
        struct.setPseSaudeIsSet(true);
      }
    }
  }

}

